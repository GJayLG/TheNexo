-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local lI1liIIIli1IIlIiIIi = assert local lIliii111IlllIIIIi1l1 = select local il1iil1lIIl1IliIi11 = tonumber local IIliIlllIlllllii1il = unpack local iIIlil1i1iIllili1ll = pcall local lIl1IliIIlii1lI1iIl1i = setfenv local iiiiliI1Iii1I11ii1i = setmetatable local lIll1i11I1IililililIl = type local l11I1l1i1lilii111Ii = getfenv local I1ilIii1Iill111ii11 = tostring local I1Iiiiii1I1iil1l1II = error local lIlllIIil1ii1ilIi11li = string.sub local llIll1iiIl1IilIl1l1 = string.byte local iililIlIliiII11Il1l = string.char local iiliI1l11II1illi1lI = string.rep local llIlIllIIIlil1l1I1l = string.gsub local lIlIl11Ii1ll1111lllll = string.match local I1lll1liI1Ii1iilIII = table.insert local I1iIl1iIIi1Il1111i1 = llIll1iiIl1IilIl1l1("s", 1) local Iili1Ii1iiIlll11ll1, llIlii11111lIiIl11I = #{4135}, #{ 4547, 5105, 6714, 5368, 2069, 3346, 3362, 5052, 2377, 6345, 1640, 3646, 3476, 2568, 3401, 5500, 489, 322, 2666, 327, 3400, 2691 } + I1iIl1iIIi1Il1111i1 + 130934 local ii1lII11llIi1Ili1il = {} local ll1liI1IIii1iIllIlI = 1 local I11ilillIIllil11l1i, lil11i1liIi1iIIi1Ii local function lIliiIIilI1llIi11lIiI(lIlIilIi1IlI11I11ll1i, ll1I1IIi1lliI1Iiii1) local Iil1IiIII1IllIlii1I lIlIilIi1IlI11I11ll1i = llIlIllIIIlil1l1I1l(lIlllIIil1ii1ilIi11li(lIlIilIi1IlI11I11ll1i, 5), "..", function(IIill1I11l111I1lili) if llIll1iiIl1IilIl1l1(IIill1I11l111I1lili, 2) == 72 then Iil1IiIII1IllIlii1I = il1iil1lIIl1IliIi11(lIlllIIil1ii1ilIi11li(IIill1I11l111I1lili, 1, 1)) return "" else local lI1Iililil1lIIilil1 = iililIlIliiII11Il1l(il1iil1lIIl1IliIi11(IIill1I11l111I1lili, 16)) if Iil1IiIII1IllIlii1I then local i1lllil11llllilllIl = iiliI1l11II1illi1lI(lI1Iililil1lIIilil1, Iil1IiIII1IllIlii1I) Iil1IiIII1IllIlii1I = nil return i1lllil11llllilllIl else return lI1Iililil1lIIilil1 end end end) local function i1l11i1illl1ii1I11i() local IiIllIl1I1II1Iiil11 = llIll1iiIl1IilIl1l1(lIlIilIi1IlI11I11ll1i, ll1liI1IIii1iIllIlI, ll1liI1IIii1iIllIlI) ll1liI1IIii1iIllIlI = ll1liI1IIii1iIllIlI + 1 return IiIllIl1I1II1Iiil11 end local function iII1lllIIIl11IllllI() local IiIllIl1I1II1Iiil11, lI1Iililil1lIIilil1, i1lllil11llllilllIl, Ill1illIIiIll1i111I = llIll1iiIl1IilIl1l1(lIlIilIi1IlI11I11ll1i, ll1liI1IIii1iIllIlI, ll1liI1IIii1iIllIlI + 3) ll1liI1IIii1iIllIlI = ll1liI1IIii1iIllIlI + 4 return Ill1illIIiIll1i111I * 16777216 + i1lllil11llllilllIl * 65536 + lI1Iililil1lIIilil1 * 256 + IiIllIl1I1II1Iiil11 end local function Illi1li1llII11lIil1(I1llli1iiIllIilI1il, lIlIiiii1Ilii11lliIIl, lI11ill11lI1iIll1II) if lI11ill11lI1iIll1II then local iIlili1i1Il1iIil1Il, I1iI11IilI11IliiIIl = 0, 0 for lIlili1i1iI1llIil1iI1 = lIlIiiii1Ilii11lliIIl, lI11ill11lI1iIll1II do iIlili1i1Il1iIil1Il = iIlili1i1Il1iIil1Il + 2 ^ I1iI11IilI11IliiIIl * Illi1li1llII11lIil1(I1llli1iiIllIilI1il, lIlili1i1iI1llIil1iI1) I1iI11IilI11IliiIIl = I1iI11IilI11IliiIIl + 1 end return iIlili1i1Il1iIil1Il else local iiIiil1IiIiiiI1Iil1 = 2 ^ (lIlIiiii1Ilii11lliIIl - 1) return iiIiil1IiIiiiI1Iil1 <= I1llli1iiIllIilI1il % (iiIiil1IiIiiiI1Iil1 + iiIiil1IiIiiiI1Iil1) and 1 or 0 end end local function lIllIlIi1IIllIIll1il1() local IiIllIl1I1II1Iiil11, lI1Iililil1lIIilil1 = iII1lllIIIl11IllllI(), iII1lllIIIl11IllllI() if IiIllIl1I1II1Iiil11 == 0 and lI1Iililil1lIIilil1 == 0 then return 0 end return (-2 * Illi1li1llII11lIil1(lI1Iililil1lIIilil1, 32) + 1) * 2 ^ (Illi1li1llII11lIil1(lI1Iililil1lIIilil1, 21, 31) - 1023) * ((Illi1li1llII11lIil1(lI1Iililil1lIIilil1, 1, 20) * 4294967296 + IiIllIl1I1II1Iiil11) / 4503599627370496 + 1) end local ilI11iIli1liiiiIil1 = bit or bit32 local lIl1IiIlll1III1lIiI11 = ilI11iIli1liiiiIil1 and ilI11iIli1liiiiIil1.bxor or function(IiIllIl1I1II1Iiil11, lI1Iililil1lIIilil1) local iIiiil11IIliIIl1IlI = 1 local i1lllil11llllilllIl = 0 while IiIllIl1I1II1Iiil11 > 0 and lI1Iililil1lIIilil1 > 0 do local l1IlilIiI11IIIi111l = IiIllIl1I1II1Iiil11 % 2 local lIi1l1i1l11I1liI1iI = lI1Iililil1lIIilil1 % 2 if l1IlilIiI11IIIi111l ~= lIi1l1i1l11I1liI1iI then i1lllil11llllilllIl = i1lllil11llllilllIl + iIiiil11IIliIIl1IlI end IiIllIl1I1II1Iiil11 = (IiIllIl1I1II1Iiil11 - l1IlilIiI11IIIi111l) / 2 lI1Iililil1lIIilil1 = (lI1Iililil1lIIilil1 - lIi1l1i1l11I1liI1iI) / 2 iIiiil11IIliIIl1IlI = iIiiil11IIliIIl1IlI * 2 end if IiIllIl1I1II1Iiil11 < lI1Iililil1lIIilil1 then IiIllIl1I1II1Iiil11 = lI1Iililil1lIIilil1 end while IiIllIl1I1II1Iiil11 > 0 do local l1IlilIiI11IIIi111l = IiIllIl1I1II1Iiil11 % 2 if l1IlilIiI11IIIi111l > 0 then i1lllil11llllilllIl = i1lllil11llllilllIl + iIiiil11IIliIIl1IlI end IiIllIl1I1II1Iiil11 = (IiIllIl1I1II1Iiil11 - l1IlilIiI11IIIi111l) / 2 iIiiil11IIliIIl1IlI = iIiiil11IIliIIl1IlI * 2 end return i1lllil11llllilllIl end local function lIll1lil111llIIi1IiI1(lIl1lIlilIililiI111i1) local lIIii11i1I1IliiIIIi = { llIll1iiIl1IilIl1l1(lIlIilIi1IlI11I11ll1i, ll1liI1IIii1iIllIlI, ll1liI1IIii1iIllIlI + 3) } ll1liI1IIii1iIllIlI = ll1liI1IIii1iIllIlI + 4 local IiIllIl1I1II1Iiil11 = lIl1IiIlll1III1lIiI11(lIIii11i1I1IliiIIIi[1], lil11i1liIi1iIIi1Ii) local lI1Iililil1lIIilil1 = lIl1IiIlll1III1lIiI11(lIIii11i1I1IliiIIIi[2], lil11i1liIi1iIIi1Ii) local i1lllil11llllilllIl = lIl1IiIlll1III1lIiI11(lIIii11i1I1IliiIIIi[3], lil11i1liIi1iIIi1Ii) local Ill1illIIiIll1i111I = lIl1IiIlll1III1lIiI11(lIIii11i1I1IliiIIIi[4], lil11i1liIi1iIIi1Ii) lil11i1liIi1iIIi1Ii = (197 * lil11i1liIi1iIIi1Ii + lIl1lIlilIililiI111i1) % 256 return Ill1illIIiIll1i111I * 16777216 + i1lllil11llllilllIl * 65536 + lI1Iililil1lIIilil1 * 256 + IiIllIl1I1II1Iiil11 end local function llII1i1iiI1Iilil1li(lIlIiII1iliIiIlI1IIi1) local I11IIIII1I1i11i1lIl = iII1lllIIIl11IllllI() local iI1I1IlIii11ilIlii1 = "" for lIlili1i1iI1llIil1iI1 = Iili1Ii1iiIlll11ll1, I11IIIII1I1i11i1lIl do iI1I1IlIii11ilIlii1 = iI1I1IlIii11ilIlii1 .. iililIlIliiII11Il1l(lIl1IiIlll1III1lIiI11(llIll1iiIl1IilIl1l1(lIlIilIi1IlI11I11ll1i, ll1liI1IIii1iIllIlI + lIlili1i1iI1llIil1iI1 - 1), I11ilillIIllil11l1i)) I11ilillIIllil11l1i = (lIlIiII1iliIiIlI1IIi1 * I11ilillIIllil11l1i + 7) % 256 end ll1liI1IIii1iIllIlI = ll1liI1IIii1iIllIlI + I11IIIII1I1i11i1lIl return iI1I1IlIii11ilIlii1 end I11ilillIIllil11l1i = i1l11i1illl1ii1I11i() lil11i1liIi1iIIi1Ii = i1l11i1illl1ii1I11i() local IIi11i1illllIilii1I = {} for lIlili1i1iI1llIil1iI1 = Iili1Ii1iiIlll11ll1, i1l11i1illl1ii1I11i() do local IlII1iIlI1IiI1iiI1i = i1l11i1illl1ii1I11i() local l11Ill1111I1I1II1ii = (lIlili1i1iI1llIil1iI1 - 1) * 2 IIi11i1illllIilii1I[l11Ill1111I1I1II1ii] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, 1, 4) IIi11i1illllIilii1I[l11Ill1111I1I1II1ii + 1] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, 5, 8) end local function lIlilil1IIIl1IiIliIII() local lI11llI1lIiil11I1l1 = { {}, {}, nil, {}, {}, nil, nil } iII1lllIIIl11IllllI() i1l11i1illl1ii1I11i() i1l11i1illl1ii1I11i() iII1lllIIIl11IllllI() local lIl1ii1ll1Il11I1IiilI = iII1lllIIIl11IllllI() - (#{ 3657, 5556, 3698, 1460, 1340, 3598, 1163, 1463, 1260, 2714, 1039, 665, 2877, 3177, 2752, 5216, 2104, 5282, 5052, 4829, 5059, 479, 5895, 4424 } + I1iIl1iIIi1Il1111i1 + 133600) local I1I1iili1lliiIII1II = i1l11i1illl1ii1I11i() for lIlili1i1iI1llIil1iI1 = Iili1Ii1iiIlll11ll1, lIl1ii1ll1Il11I1IiilI do local lIl1l1ilIllIiIliIIIli local lIll1i11I1IililililIl = i1l11i1illl1ii1I11i() if lIll1i11I1IililililIl == #{ 4441, 345, 4688, 3722, 1485, 1020, 3922, 4327, 5284, 2226, 4012, 2089, 2326, 1201, 2082, 3079, 4473, 339, 6285, 778, 5897, 4362, 3587 } + I1iIl1iIIi1Il1111i1 + 93 then lIl1l1ilIllIiIliIIIli = lIlllIIil1ii1ilIi11li(llII1i1iiI1Iilil1li(#{ 954, 931, 1561, 1922, 124, 6393, 2471, 4691, 5062, 2266, 2809, 5694, 1422, 2182, 5630, 1243, 4909, 3575, 4801, 3844, 3474, 6057, 1582, 4679 } + I1iIl1iIIi1Il1111i1 + -19), #{ 2888, 6282, 5821, 1041 }) end if lIll1i11I1IililililIl == #{ 836, 5723, 5131, 6075, 5745, 5835, 5872, 1016, 69, 5997, 3769, 1798, 3310, 4785, 3296, 561, 2917, 3067, 5155, 3724 } + I1iIl1iIIi1Il1111i1 + -80 then lIl1l1ilIllIiIliIIIli = lIlllIIil1ii1ilIi11li(llII1i1iiI1Iilil1li(I1I1iili1lliiIII1II), #{ 2791, 1358, 5101, 4138, 6018 }) end if lIll1i11I1IililililIl == #{ 5990, 2685, 2321, 6012, 1684, 5552, 6330, 5838, 756, 363, 4427, 995, 3377, 2127, 3215, 6026, 4709, 2890, 3656, 2956, 2621 } + I1iIl1iIIi1Il1111i1 + 87 then lIl1l1ilIllIiIliIIIli = lIlllIIil1ii1ilIi11li(llII1i1iiI1Iilil1li(#{ 954, 931, 1561, 1922, 124, 6393, 2471, 4691, 5062, 2266, 2809, 5694, 1422, 2182, 5630, 1243, 4909, 3575, 4801, 3844, 3474, 6057, 1582, 4679 } + I1iIl1iIIi1Il1111i1 + -19), #{ 2888, 6282, 5821, 1041 }) end if lIll1i11I1IililililIl == #{ 4566, 5398, 3414, 2948, 6935, 6811, 1666, 4528, 4306, 2527, 969, 1117, 5663, 3256, 875, 2222, 5651, 1035, 2694, 1801, 1647, 2860, 5966 } + I1iIl1iIIi1Il1111i1 + 1 then lIl1l1ilIllIiIliIIIli = #{ 4213, 6135, 2566, 5755, 3976, 3500, 344, 5784, 4421, 3707, 664, 6074, 6412, 696, 2103, 1689, 4545, 6826, 3341, 5058 } + I1iIl1iIIi1Il1111i1 + 84698 == #{ 4213, 6135, 2566, 5755, 3976, 3500, 344, 5784, 4421, 3707, 664, 6074, 6412, 696, 2103, 1689, 4545, 6826, 3341, 5058 } + I1iIl1iIIi1Il1111i1 + 84698 end if lIll1i11I1IililililIl == #{ 2720, 5726, 3792, 1704, 1648, 175, 2061, 5301, 1178, 4472, 4894, 1355, 3842, 6170, 479, 2869, 5242, 4885, 156, 878, 3923, 394, 2143, 6098 } + I1iIl1iIIi1Il1111i1 + 44 then lIl1l1ilIllIiIliIIIli = lIllIlIi1IIllIIll1il1() + lIllIlIi1IIllIIll1il1() end if lIll1i11I1IililililIl == #{ 1498, 2215, 6964, 3025, 1935, 1030, 4762, 4152, 2880, 4447, 6966, 1154, 3033, 2351, 3585, 3122, 1317, 4064, 3703, 3835, 2536, 2681, 43 } + I1iIl1iIIi1Il1111i1 + -31 then lIl1l1ilIllIiIliIIIli = i1l11i1illl1ii1I11i() end if lIll1i11I1IililililIl == #{ 1700, 4704, 3829, 5988, 685, 5392, 4645, 3808, 803, 1971, 2691, 3498, 3781, 3775, 3575, 5850, 3661, 2284, 5462, 3058, 1787, 312, 2051, 1018 } + I1iIl1iIIi1Il1111i1 + 19 then lIl1l1ilIllIiIliIIIli = iII1lllIIIl11IllllI() end if lIll1i11I1IililililIl == #{ 6572, 4546, 143, 6079, 2945, 4567, 3251, 5046, 4080, 1630, 6010, 6768, 3144, 34, 2260, 3390, 3046, 5927, 3553, 2370 } + I1iIl1iIIi1Il1111i1 + -74 then lIl1l1ilIllIiIliIIIli = lIllIlIi1IIllIIll1il1() end if lIll1i11I1IililililIl == #{ 2414, 2834, 5034, 4596, 5900, 4736, 2720, 4933, 1247, 4931, 525, 6568, 6404, 2640, 2059, 4171, 1252, 2788, 6235, 6580, 6076, 1606, 5512 } + I1iIl1iIIi1Il1111i1 + 42 then lIl1l1ilIllIiIliIIIli = #{ 3169, 4505, 6875, 1446, 595, 5879, 3186, 847, 3598, 421, 6647, 4142, 2108, 3831, 6407, 3360, 5521, 1604, 3824, 4366, 768, 5293 } + I1iIl1iIIi1Il1111i1 + 130132 == #{ 77, 3234, 6209, 6621, 1502, 2064, 1219, 704, 28, 3232, 6964, 6038, 5953, 68, 780, 4073, 6133, 4384, 4896, 3533, 3827, 4187, 1838, 3287 } + I1iIl1iIIi1Il1111i1 + 51512 end lI11llI1lIiil11I1l1[5][lIlili1i1iI1llIil1iI1 - Iili1Ii1iiIlll11ll1] = lIl1l1ilIllIiIliIIIli end iII1lllIIIl11IllllI() local lIl1ii1ll1Il11I1IiilI = iII1lllIIIl11IllllI() for lIlili1i1iI1llIil1iI1 = Iili1Ii1iiIlll11ll1, lIl1ii1ll1Il11I1IiilI do lI11llI1lIiil11I1l1[1][lIlili1i1iI1llIil1iI1] = iII1lllIIIl11IllllI() end i1l11i1illl1ii1I11i() i1l11i1illl1ii1I11i() i1l11i1illl1ii1I11i() lI11llI1lIiil11I1l1[6] = i1l11i1illl1ii1I11i() iII1lllIIIl11IllllI() iII1lllIIIl11IllllI() i1l11i1illl1ii1I11i() i1l11i1illl1ii1I11i() iII1lllIIIl11IllllI() i1l11i1illl1ii1I11i() lI11llI1lIiil11I1l1[7] = i1l11i1illl1ii1I11i() iII1lllIIIl11IllllI() lI11llI1lIiil11I1l1[3] = i1l11i1illl1ii1I11i() local lIl1ii1ll1Il11I1IiilI = iII1lllIIIl11IllllI() for lIlili1i1iI1llIil1iI1 = Iili1Ii1iiIlll11ll1, lIl1ii1ll1Il11I1IiilI do lI11llI1lIiil11I1l1[4][lIlili1i1iI1llIil1iI1 - Iili1Ii1iiIlll11ll1] = lIlilil1IIIl1IiIliIII() end local lIli1iiIiIIiII1Ill1Ii = iII1lllIIIl11IllllI() - (#{ 5434, 2207, 5513, 2159, 6248, 3861, 6536, 3023, 6546, 1423, 2422, 224, 3297, 5147, 5065, 6190, 2886, 1472, 38, 4438, 5552, 3633, 133 } + I1iIl1iIIi1Il1111i1 + 133650) local lIl1I1l1IlilllilIl1il = i1l11i1illl1ii1I11i() for lIlili1i1iI1llIil1iI1 = Iili1Ii1iiIlll11ll1, lIli1iiIiIIiII1Ill1Ii do local liiilIilIililI1liil = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local IlII1iIlI1IiI1iiI1i = lIll1lil111llIIi1IiI1(lIl1I1l1IlilllilIl1il) liiilIilIililI1liil[8] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, #{ 1513, 845, 1800, 1816, 4601, 5098, 2349, 3233, 4689, 2779, 4767, 4494, 2904, 323, 703, 4984, 6261, 6375, 3336, 3350 } + I1iIl1iIIi1Il1111i1 + -108, #{ 1146, 2328, 4104, 4422, 6614, 6033, 1861, 6496, 83, 1993, 1887, 6294, 2551, 180, 6558, 1603, 4030, 5343, 6693, 6547, 5823 } + I1iIl1iIIi1Il1111i1 + -104) liiilIilIililI1liil[10] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, #{ 5510, 846, 6685, 5415, 4461, 4246, 3347, 845, 6425, 3175 }, #{ 1619, 2124, 48, 6245, 5271, 4351, 4264, 5146, 6163, 6633, 2018, 2924, 3929, 4517, 3865, 2563, 4539, 5448 }) liiilIilIililI1liil[1] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, #{1942}, #{ 6330, 1092, 5155, 4138, 1041, 4821, 5449, 4916, 1104 }) liiilIilIililI1liil[7] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, #{ 2620, 6669, 5385, 4586, 3816, 1213, 3866, 3428, 6811, 4667, 2308, 4911, 2483, 422, 6005, 5897, 3688, 2883, 5272 }, #{ 2860, 2208, 5884, 197, 4339, 2796, 1148, 5827, 4171, 7, 1096, 865, 3534, 3510, 5848, 2287, 1885, 1837, 4442, 2344, 2112, 4630, 105 } + I1iIl1iIIi1Il1111i1 + -112) liiilIilIililI1liil[3] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, #{4577}, #{ 4730, 2933, 3258, 1669, 5171, 3071, 6047, 5951, 1515, 2793, 3962, 2086, 539, 784, 3250, 6793, 6946, 4236 }) liiilIilIililI1liil[81296] = Illi1li1llII11lIil1(IlII1iIlI1IiI1iiI1i, #{ 3574, 3332, 6672, 1496, 1369, 3312, 5937, 1435, 3452, 6686, 861, 519, 827, 6413, 6201, 2146, 2069, 1387, 3186, 3287, 2091, 216, 3991, 5644 } + I1iIl1iIIi1Il1111i1 + -112, #{ 2989, 6060, 1521, 2680, 76, 2559, 756, 5894, 2912, 6446, 5524, 6009, 4875, 2652, 496, 877, 5358, 98, 1568, 354, 5843, 3950 } + I1iIl1iIIi1Il1111i1 + -105) lI11llI1lIiil11I1l1[2][lIlili1i1iI1llIil1iI1] = liiilIilIililI1liil end for lIlili1i1iI1llIil1iI1 = Iili1Ii1iiIlll11ll1, lIli1iiIiIIiII1Ill1Ii do local liiilIilIililI1liil = lI11llI1lIiil11I1l1[2][lIlili1i1iI1llIil1iI1] local Ii1iii11illlll1i1lI = IIi11i1illllIilii1I[liiilIilIililI1liil[8]] if Ii1iii11illlll1i1lI == #{1676, 976} and liiilIilIililI1liil[10] > 255 then liiilIilIililI1liil[2] = true liiilIilIililI1liil[5] = lI11llI1lIiil11I1l1[5][liiilIilIililI1liil[10] - 256] end if Ii1iii11illlll1i1lI == #{ 3728, 2850, 3062 } then if liiilIilIililI1liil[1] > 255 then liiilIilIililI1liil[6] = true liiilIilIililI1liil[4] = lI11llI1lIiil11I1l1[5][liiilIilIililI1liil[1] - 256] end if liiilIilIililI1liil[10] > 255 then liiilIilIililI1liil[2] = true liiilIilIililI1liil[5] = lI11llI1lIiil11I1l1[5][liiilIilIililI1liil[10] - 256] end end if Ii1iii11illlll1i1lI == #{947} and liiilIilIililI1liil[1] > 255 then liiilIilIililI1liil[6] = true liiilIilIililI1liil[4] = lI11llI1lIiil11I1l1[5][liiilIilIililI1liil[1] - 256] end if Ii1iii11illlll1i1lI == #{ 6918, 4845, 5223, 1237 } then liiilIilIililI1liil[9] = lI11llI1lIiil11I1l1[5][liiilIilIililI1liil[3]] end end iII1lllIIIl11IllllI() return lI11llI1lIiil11I1l1 end local function Iil1II1iiiIiIi11ll1(lI11llI1lIiil11I1l1, ll1I1IIi1lliI1Iiii1, iIIllii1lIiI1illlll) local I1I1I1iIi1l1IiI1iIi, lIl111l1llii11l1il1Ii = 10, 16 local l1111llIli1l1iliIll = lI11llI1lIiil11I1l1[2] local II1il111I1i1111I11i = 7 local IlI1IIIiilIii1il1l1 = lI11llI1lIiil11I1l1[4] local l11i1iIlIIIll1Il1i1 = lI11llI1lIiil11I1l1[3] local lIliil1Illiii1liiliIi = lI11llI1lIiil11I1l1[6] local Ii1IlIiliIliIlIi1il = 8 local liliIllIl1lI1iIlllI = lI11llI1lIiil11I1l1[1] local llIi1IIl1IlIIl11lI1 = 1 local function IIil1IiiIIIIiIiIlIi(...) local iilIlliI1il1i1i1Ii1 = 0 local iIll11li1lilI111lil = { IIliIlllIlllllii1il({}, 1, lIliil1Illiii1liiliIi) } local IliIIIi1li1I11I11iI = 1 local illI1iiII11lliiil11 = {} local i1IIIIliii11iillili = {} local ll1I1IIi1lliI1Iiii1 = l11I1l1i1lilii111Ii() local lIlIlll1liI11I1lI1liI = { ... } local l1ii1II11liliI1l1II = #lIlIlll1liI11I1lI1liI - 1 for lIlili1i1iI1llIil1iI1 = 0, l1ii1II11liliI1l1II do if lIlili1i1iI1llIil1iI1 < l11i1iIlIIIll1Il1i1 then iIll11li1lilI111lil[lIlili1i1iI1llIil1iI1] = lIlIlll1liI11I1lI1liI[lIlili1i1iI1llIil1iI1 + 1] end end local function lilliliilliiii11lIl(...) local i1lllil11llllilllIl = lIliii111IlllIIIIi1l1("#", ...) local iIIiI11iiI1IIIlI11I = { ... } return i1lllil11llllilllIl, iIIiI11iiI1IIIlI11I end local function I111lIli1IIlIl1Ili1() while true do local lIlll111liiiiiiIlIIii = l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] local i1iiI1IIIIi1iiiIiIl = lIlll111liiiiiiIlIIii[8] IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 if i1iiI1IIIIi1iiiIiIl >= 11 then if i1iiI1IIIIi1iiiIiIl >= 17 then if i1iiI1IIIIi1iiiIiIl >= 20 then if i1iiI1IIIIi1iiiIiIl < 21 then iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = ll1I1IIi1lliI1Iiii1[lIlll111liiiiiiIlIIii[9]] elseif i1iiI1IIIIi1iiiIiIl ~= 22 then if not not iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] == (lIlll111liiiiiiIlIIii[10] == 0) then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 end else illI1iiII11lliiil11[iIll11li1lilI111lil] = nil local lI1IiIll1i1ll11iIll = lIlll111liiiiiiIlIIii[7] local ii1IIi1iilII1IIlllI = lIlll111liiiiiiIlIIii[1] if ii1IIi1iilII1IIlllI == 1 then return true end local lliliil1IilIil1lIIi = lI1IiIll1i1ll11iIll + ii1IIi1iilII1IIlllI - 2 if ii1IIi1iilII1IIlllI == 0 then lliliil1IilIil1lIIi = iilIlliI1il1i1i1Ii1 end return true, lI1IiIll1i1ll11iIll, lliliil1IilIil1lIIi end elseif i1iiI1IIIIi1iiiIiIl < 18 then iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = lIlll111liiiiiiIlIIii[9] elseif i1iiI1IIIIi1iiiIiIl ~= 19 then iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = { IIliIlllIlllllii1il(ii1lII11llIi1Ili1il, 1, lIlll111liiiiiiIlIIii[1] == 0 and 255 or lIlll111liiiiiiIlIIii[1]) } else local lI1Iililil1lIIilil1, i1lllil11llllilllIl if lIlll111liiiiiiIlIIii[6] then lI1Iililil1lIIilil1 = lIlll111liiiiiiIlIIii[4] else lI1Iililil1lIIilil1 = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] end if lIlll111liiiiiiIlIIii[2] then i1lllil11llllilllIl = lIlll111liiiiiiIlIIii[5] else i1lllil11llllilllIl = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[10]] end iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]][lI1Iililil1lIIilil1] = i1lllil11llllilllIl end elseif i1iiI1IIIIi1iiiIiIl < 14 then if i1iiI1IIIIi1iiiIiIl < 12 then iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = lIlll111liiiiiiIlIIii[1] ~= 0 if lIlll111liiiiiiIlIIii[10] ~= 0 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 end elseif i1iiI1IIIIi1iiiIiIl == 13 then iIIllii1lIiI1illlll[lIlll111liiiiiiIlIIii[1]] = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] elseif lIlll111liiiiiiIlIIii[10] == 98 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI - 1 l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] = { [8] = 3, [7] = (lIlll111liiiiiiIlIIii[7] - 164) % 256, [10] = (lIlll111liiiiiiIlIIii[1] - 164) % 256 } else iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = not iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] end elseif i1iiI1IIIIi1iiiIiIl >= 15 then if i1iiI1IIIIi1iiiIiIl == 16 then if lIlll111liiiiiiIlIIii[10] == 240 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI - 1 l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] = { [8] = 10, [7] = (lIlll111liiiiiiIlIIii[7] - 175) % 256, [1] = (lIlll111liiiiiiIlIIii[1] - 175) % 256 } elseif lIlll111liiiiiiIlIIii[10] == 241 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI - 1 l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] = { [8] = 13, [7] = (lIlll111liiiiiiIlIIii[7] - 116) % 256, [1] = (lIlll111liiiiiiIlIIii[1] - 116) % 256 } elseif lIlll111liiiiiiIlIIii[10] == 191 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI - 1 l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] = { [8] = 21, [7] = (lIlll111liiiiiiIlIIii[7] - 12) % 256, [10] = (lIlll111liiiiiiIlIIii[1] - 12) % 256 } elseif lIlll111liiiiiiIlIIii[10] == 5 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI - 1 l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] = { [8] = 22, [7] = (lIlll111liiiiiiIlIIii[7] - 242) % 256, [1] = (lIlll111liiiiiiIlIIii[1] - 242) % 256 } else iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = iIIllii1lIiI1illlll[lIlll111liiiiiiIlIIii[1]] end else local lI1Iililil1lIIilil1, i1lllil11llllilllIl if lIlll111liiiiiiIlIIii[6] then lI1Iililil1lIIilil1 = lIlll111liiiiiiIlIIii[4] else lI1Iililil1lIIilil1 = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] end if lIlll111liiiiiiIlIIii[2] then i1lllil11llllilllIl = lIlll111liiiiiiIlIIii[5] else i1lllil11llllilllIl = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[10]] end if lI1Iililil1lIIilil1 == i1lllil11llllilllIl ~= (lIlll111liiiiiiIlIIii[7] ~= 0) then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 end end else local lI1Iililil1lIIilil1, i1lllil11llllilllIl if lIlll111liiiiiiIlIIii[6] then lI1Iililil1lIIilil1 = lIlll111liiiiiiIlIIii[4] else lI1Iililil1lIIilil1 = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] end if lIlll111liiiiiiIlIIii[2] then i1lllil11llllilllIl = lIlll111liiiiiiIlIIii[5] else i1lllil11llllilllIl = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[10]] end if lI1Iililil1lIIilil1 < i1lllil11llllilllIl ~= (lIlll111liiiiiiIlIIii[7] ~= 0) then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 end end elseif i1iiI1IIIIi1iiiIiIl >= 5 then if i1iiI1IIIIi1iiiIiIl < 8 then if i1iiI1IIIIi1iiiIiIl >= 6 then if i1iiI1IIIIi1iiiIiIl == 7 then local l1II1IiiilII11i1Ili = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] local i1lllil11llllilllIl if lIlll111liiiiiiIlIIii[2] then i1lllil11llllilllIl = lIlll111liiiiiiIlIIii[5] else i1lllil11llllilllIl = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[10]] end iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7] + 1] = l1II1IiiilII11i1Ili iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = l1II1IiiilII11i1Ili[i1lllil11llllilllIl] else local lI1Iililil1lIIilil1, i1lllil11llllilllIl if lIlll111liiiiiiIlIIii[6] then lI1Iililil1lIIilil1 = lIlll111liiiiiiIlIIii[4] else lI1Iililil1lIIilil1 = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] end if lIlll111liiiiiiIlIIii[2] then i1lllil11llllilllIl = lIlll111liiiiiiIlIIii[5] else i1lllil11llllilllIl = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[10]] end if lI1Iililil1lIIilil1 <= i1lllil11llllilllIl ~= (lIlll111liiiiiiIlIIii[7] ~= 0) then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 end end else local i11IlIIIi1I1li11Ill = IlI1IIIiilIii1il1l1[lIlll111liiiiiiIlIIii[3]] local iII1I1i1lliIlil1I11 = {} if i11IlIIIi1I1li11Ill[II1il111I1i1111I11i] > 0 then do local IiiIIi1I11lll1illlI = {} iII1I1i1lliIlil1I11 = iiiiliI1Iii1I11ii1i({}, { __index = function(iIIiI11iiI1IIIlI11I, lIlllI1il1iiI1llilill) local lIlili1ll11liilI1lli1 = IiiIIi1I11lll1illlI[lIlllI1il1iiI1llilill] return lIlili1ll11liilI1lli1[1][lIlili1ll11liilI1lli1[2]] end, __newindex = function(iIIiI11iiI1IIIlI11I, lIlllI1il1iiI1llilill, IlIiil1Il1I1Ill1ili) local lIlili1ll11liilI1lli1 = IiiIIi1I11lll1illlI[lIlllI1il1iiI1llilill] lIlili1ll11liilI1lli1[1][lIlili1ll11liilI1lli1[2]] = IlIiil1Il1I1Ill1ili end }) for lIlili1i1iI1llIil1iI1 = 1, i11IlIIIi1I1li11Ill[II1il111I1i1111I11i] do local II1ilIliii1iiIiIIl1 = l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] if II1ilIliii1iiIiIIl1[Ii1IlIiliIliIlIi1il] == I1I1I1iIi1l1IiI1iIi then IiiIIi1I11lll1illlI[lIlili1i1iI1llIil1iI1 - 1] = { iIll11li1lilI111lil, II1ilIliii1iiIiIIl1[llIi1IIl1IlIIl11lI1] } elseif II1ilIliii1iiIiIIl1[Ii1IlIiliIliIlIi1il] == lIl111l1llii11l1il1Ii then IiiIIi1I11lll1illlI[lIlili1i1iI1llIil1iI1 - 1] = { iIIllii1lIiI1illlll, II1ilIliii1iiIiIIl1[llIi1IIl1IlIIl11lI1] } end IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 end if not illI1iiII11lliiil11[iIll11li1lilI111lil] then illI1iiII11lliiil11[iIll11li1lilI111lil] = {IiiIIi1I11lll1illlI} else I1lll1liI1Ii1iilIII(illI1iiII11lliiil11[iIll11li1lilI111lil], IiiIIi1I11lll1illlI) end end end local IllIII1IlIlIiIIlIiI = Iil1II1iiiIiIi11ll1(i11IlIIIi1I1li11Ill, ll1I1IIi1lliI1Iiii1, iII1I1i1lliIlil1I11) iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = IllIII1IlIlIiIIlIiI end elseif i1iiI1IIIIi1iiiIiIl < 9 then local lI1IiIll1i1ll11iIll = lIlll111liiiiiiIlIIii[7] local lIlIlll1liI11I1lI1liI = lIlll111liiiiiiIlIIii[1] local lIl1ilI1i1IIl1ll1i11I = lIlll111liiiiiiIlIIii[10] local ilI1Iiil11Il1iiil1i, lliliil1IilIil1lIIi, I111lIli1IIlIl1Ili1 if lIlIlll1liI11I1lI1liI ~= 1 then if lIlIlll1liI11I1lI1liI ~= 0 then lliliil1IilIil1lIIi = lI1IiIll1i1ll11iIll + lIlIlll1liI11I1lI1liI - 1 else lliliil1IilIil1lIIi = iilIlliI1il1i1i1Ii1 end lliliil1IilIil1lIIi, ilI1Iiil11Il1iiil1i = lilliliilliiii11lIl(iIll11li1lilI111lil[lI1IiIll1i1ll11iIll](IIliIlllIlllllii1il(iIll11li1lilI111lil, lI1IiIll1i1ll11iIll + 1, lliliil1IilIil1lIIi))) else lliliil1IilIil1lIIi, ilI1Iiil11Il1iiil1i = lilliliilliiii11lIl(iIll11li1lilI111lil[lI1IiIll1i1ll11iIll]()) end if lIl1ilI1i1IIl1ll1i11I ~= 1 then if lIl1ilI1i1IIl1ll1i11I ~= 0 then lliliil1IilIil1lIIi = lI1IiIll1i1ll11iIll + lIl1ilI1i1IIl1ll1i11I - 2 iilIlliI1il1i1i1Ii1 = lliliil1IilIil1lIIi + 1 else lliliil1IilIil1lIIi = lliliil1IilIil1lIIi + lI1IiIll1i1ll11iIll - 1 iilIlliI1il1i1i1Ii1 = lliliil1IilIil1lIIi end I111lIli1IIlIl1Ili1 = 0 for lIlili1i1iI1llIil1iI1 = lI1IiIll1i1ll11iIll, lliliil1IilIil1lIIi do I111lIli1IIlIl1Ili1 = I111lIli1IIlIl1Ili1 + 1 iIll11li1lilI111lil[lIlili1i1iI1llIil1iI1] = ilI1Iiil11Il1iiil1i[I111lIli1IIlIl1Ili1] end else iilIlliI1il1i1i1Ii1 = lI1IiIll1i1ll11iIll - 1 end for lIlili1i1iI1llIil1iI1 = iilIlliI1il1i1i1Ii1 + 1, lIliil1Illiii1liiliIi do iIll11li1lilI111lil[lIlili1i1iI1llIil1iI1] = nil end elseif i1iiI1IIIIi1iiiIiIl ~= 10 then local lI1Iililil1lIIilil1, i1lllil11llllilllIl if lIlll111liiiiiiIlIIii[6] then lI1Iililil1lIIilil1 = lIlll111liiiiiiIlIIii[4] else lI1Iililil1lIIilil1 = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] end if lIlll111liiiiiiIlIIii[2] then i1lllil11llllilllIl = lIlll111liiiiiiIlIIii[5] else i1lllil11llllilllIl = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[10]] end iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = lI1Iililil1lIIilil1 + i1lllil11llllilllIl elseif lIlll111liiiiiiIlIIii[10] == 95 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI - 1 l1111llIli1l1iliIll[IliIIIi1li1I11I11iI] = { [8] = 16, [7] = (lIlll111liiiiiiIlIIii[7] - 16) % 256, [1] = (lIlll111liiiiiiIlIIii[1] - 16) % 256 } else iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]] end elseif i1iiI1IIIIi1iiiIiIl >= 2 then if i1iiI1IIIIi1iiiIiIl < 3 then IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + (lIlll111liiiiiiIlIIii[3] - llIlii11111lIiIl11I) elseif i1iiI1IIIIi1iiiIiIl == 4 then ll1I1IIi1lliI1Iiii1[lIlll111liiiiiiIlIIii[9]] = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] else local lI1IiIll1i1ll11iIll = lIlll111liiiiiiIlIIii[7] local l11Ill1111I1I1II1ii = lI1IiIll1i1ll11iIll + 2 local l1l1I11II11iIiillII = { iIll11li1lilI111lil[lI1IiIll1i1ll11iIll](iIll11li1lilI111lil[lI1IiIll1i1ll11iIll + 1], iIll11li1lilI111lil[lI1IiIll1i1ll11iIll + 2]) } for lIlili1i1iI1llIil1iI1 = 1, lIlll111liiiiiiIlIIii[10] do iIll11li1lilI111lil[l11Ill1111I1I1II1ii + lIlili1i1iI1llIil1iI1] = l1l1I11II11iIiillII[lIlili1i1iI1llIil1iI1] end if iIll11li1lilI111lil[lI1IiIll1i1ll11iIll + 3] ~= nil then iIll11li1lilI111lil[lI1IiIll1i1ll11iIll + 2] = iIll11li1lilI111lil[lI1IiIll1i1ll11iIll + 3] else IliIIIi1li1I11I11iI = IliIIIi1li1I11I11iI + 1 end end elseif i1iiI1IIIIi1iiiIiIl ~= 1 then local l11Ill1111I1I1II1ii = (lIlll111liiiiiiIlIIii[10] - 1) * 50 local IiiiIlIlillIllIill1 = lIlll111liiiiiiIlIIii[1] if IiiiIlIlillIllIill1 == 0 then IiiiIlIlillIllIill1 = iilIlliI1il1i1i1Ii1 - lIlll111liiiiiiIlIIii[7] end for lIlili1i1iI1llIil1iI1 = 1, IiiiIlIlillIllIill1 do iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]][l11Ill1111I1I1II1ii + lIlili1i1iI1llIil1iI1] = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7] + lIlili1i1iI1llIil1iI1] end else local i1lllil11llllilllIl if lIlll111liiiiiiIlIIii[2] then i1lllil11llllilllIl = lIlll111liiiiiiIlIIii[5] else i1lllil11llllilllIl = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[10]] end iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[7]] = iIll11li1lilI111lil[lIlll111liiiiiiIlIIii[1]][i1lllil11llllilllIl] end end end local lIllIlIllliliIi1IIlII, iI1I1IlIii11ilIlii1, lIil1IIi1lIiiiiilli, lIl11l1IiIIl1Iiil1iI1 = iIIlil1i1iIllili1ll(I111lIli1IIlIl1Ili1) if lIllIlIllliliIi1IIlII then if lIil1IIi1lIiiiiilli then return IIliIlllIlllllii1il(iIll11li1lilI111lil, lIil1IIi1lIiiiiilli, lIl11l1IiIIl1Iiil1iI1) end else I1Iiiiii1I1iil1l1II("Luraph Script:" .. (liliIllIl1lI1iIlllI[IliIIIi1li1I11I11iI - 1] or "") .. ": " .. I1ilIii1Iill111ii11(iI1I1IlIii11ilIlii1), 0) end end lIl1IliIIlii1lI1iIl1i(IIil1IiiIIIIiIiIlIi, ll1I1IIi1lliI1Iiii1) return IIil1IiiIIIIiIiIlIi end local i1Il1l1iiIlIi1Iliil = lIlilil1IIIl1IiIliIII() return Iil1II1iiiIiIi11ll1(i1Il1l1iiIlIi1Iliil, ll1I1IIi1lliI1Iiii1)() end return lIliiIIilI1llIi11lIil11I1l1i1lilii111Ii()) 