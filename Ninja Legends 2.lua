-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local IiiII1illi11iIIllli = assert local iIlilliI1Ill1IliII1 = select local llll1Ii1ll1il1liili = tonumber local lIllII11Iii1iIIiI1II1 = unpack local IllIilIIlI1IiliI1li = pcall local li11iIlIli1i1lliIil = setfenv local lIlIlllIIlllliliI1I = setmetatable local lIllIIli11I1II11Ili = type local i11IliilIIlliiii11I = getfenv local lIlIIllIIiIlii1iIIIl1 = tostring local lIlllIIllIi1I11IIilIl = error local lIli1iIiliiii111iiiil = string.sub local lIlIiiIll1iliIIllIIii = string.byte local iillIIIliIIlll1iiil = string.char local i1lIIiIlil1llil1ili = string.rep local lIli1iI1iIIIlilllli11 = string.gsub local lllIlllIilIi11l11ii = string.match local lliIi11lIlli1lIliIi = table.insert local ii1lIli111l11il1lII = lIlIiiIll1iliIIllIIii(".", 1) local lIllIIiiiIliI1lIIll11, illlliIiil1ili1lI11 = #{5800}, #{ 2025, 593, 3683, 335, 6275, 2951, 5466, 6247, 620, 6370, 3680, 3017, 17, 3315, 5354, 2220, 5472, 1876, 6419, 1784 } + ii1lIli111l11il1lII + 131005 local iiI1I11I11Ill1lIIIl = {} local IiI1IIIiilIii1Iiiil = 1 local Ili1Il1iIiiIiIIlIiI, lIlI11i1iI1IiIilll1II local function liIlI1i1iiI1ilI1I1i(lIlllliI1iI1lIiIiIlli, iiiil1iiliiI1I11Ili) local lIl1llllIIIi1111Illii lIlllliI1iI1lIiIiIlli = lIli1iI1iIIIlilllli11(lIli1iIiliiii111iiiil(lIlllliI1iI1lIiIiIlli, 5), "..", function(I111llilIll1iII1Ili) if lIlIiiIll1iliIIllIIii(I111llilIll1iII1Ili, 2) == 72 then lIl1llllIIIi1111Illii = llll1Ii1ll1il1liili(lIli1iIiliiii111iiiil(I111llilIll1iII1Ili, 1, 1)) return "" else local li1ilI1IIIli1ilIl1I = iillIIIliIIlll1iiil(llll1Ii1ll1il1liili(I111llilIll1iII1Ili, 16)) if lIl1llllIIIi1111Illii then local lIlII11ii1IiIi1lliIll = i1lIIiIlil1llil1ili(li1ilI1IIIli1ilIl1I, lIl1llllIIIi1111Illii) lIl1llllIIIi1111Illii = nil return lIlII11ii1IiIi1lliIll else return li1ilI1IIIli1ilIl1I end end end) local function lliI1lIi11iiiliIiii() local lIli1IlIlIIIIIliilll1 = lIlIiiIll1iliIIllIIii(lIlllliI1iI1lIiIiIlli, IiI1IIIiilIii1Iiiil, IiI1IIIiilIii1Iiiil) IiI1IIIiilIii1Iiiil = IiI1IIIiilIii1Iiiil + 1 return lIli1IlIlIIIIIliilll1 end local function IiIlli1l111ii1iiIl1() local lIli1IlIlIIIIIliilll1, li1ilI1IIIli1ilIl1I, lIlII11ii1IiIi1lliIll, iIll11llI11Illlil1l = lIlIiiIll1iliIIllIIii(lIlllliI1iI1lIiIiIlli, IiI1IIIiilIii1Iiiil, IiI1IIIiilIii1Iiiil + 3) IiI1IIIiilIii1Iiiil = IiI1IIIiilIii1Iiiil + 4 return iIll11llI11Illlil1l * 16777216 + lIlII11ii1IiIi1lliIll * 65536 + li1ilI1IIIli1ilIl1I * 256 + lIli1IlIlIIIIIliilll1 end local function I11iIIiiilIlII1liI1(liiliI1Il1iIiii1iiI, IiIli1lIiIll1iIiiIi, II11i11lI1liilIIiii) if II11i11lI1liilIIiii then local lllll1l1lIiIlliiiIi, lIlllIII1llI1iI11i1lI = 0, 0 for ii1Ill11IIliiIiIiI1 = IiIli1lIiIll1iIiiIi, II11i11lI1liilIIiii do lllll1l1lIiIlliiiIi = lllll1l1lIiIlliiiIi + 2 ^ lIlllIII1llI1iI11i1lI * I11iIIiiilIlII1liI1(liiliI1Il1iIiii1iiI, ii1Ill11IIliiIiIiI1) lIlllIII1llI1iI11i1lI = lIlllIII1llI1iI11i1lI + 1 end return lllll1l1lIiIlliiiIi else local iiiil1I1II1iil111li = 2 ^ (IiIli1lIiIll1iIiiIi - 1) return iiiil1I1II1iil111li <= liiliI1Il1iIiii1iiI % (iiiil1I1II1iil111li + iiiil1I1II1iil111li) and 1 or 0 end end local function lIliIIl1lilII1l1I1I1i() local lIli1IlIlIIIIIliilll1, li1ilI1IIIli1ilIl1I = IiIlli1l111ii1iiIl1(), IiIlli1l111ii1iiIl1() if lIli1IlIlIIIIIliilll1 == 0 and li1ilI1IIIli1ilIl1I == 0 then return 0 end return (-2 * I11iIIiiilIlII1liI1(li1ilI1IIIli1ilIl1I, 32) + 1) * 2 ^ (I11iIIiiilIlII1liI1(li1ilI1IIIli1ilIl1I, 21, 31) - 1023) * ((I11iIIiiilIlII1liI1(li1ilI1IIIli1ilIl1I, 1, 20) * 4294967296 + lIli1IlIlIIIIIliilll1) / 4503599627370496 + 1) end local lIliIlIiIIillIi111i11 = bit or bit32 local Ilii11I1i1iI11Il1il = lIliIlIiIIillIi111i11 and lIliIlIiIIillIi111i11.bxor or function(lIli1IlIlIIIIIliilll1, li1ilI1IIIli1ilIl1I) local IlliIlli11lIiiIllll = 1 local lIlII11ii1IiIi1lliIll = 0 while lIli1IlIlIIIIIliilll1 > 0 and li1ilI1IIIli1ilIl1I > 0 do local lIillIIIil1ilI1i1lI = lIli1IlIlIIIIIliilll1 % 2 local lIlillI1ilIiiIIi1liI1 = li1ilI1IIIli1ilIl1I % 2 if lIillIIIil1ilI1i1lI ~= lIlillI1ilIiiIIi1liI1 then lIlII11ii1IiIi1lliIll = lIlII11ii1IiIi1lliIll + IlliIlli11lIiiIllll end lIli1IlIlIIIIIliilll1 = (lIli1IlIlIIIIIliilll1 - lIillIIIil1ilI1i1lI) / 2 li1ilI1IIIli1ilIl1I = (li1ilI1IIIli1ilIl1I - lIlillI1ilIiiIIi1liI1) / 2 IlliIlli11lIiiIllll = IlliIlli11lIiiIllll * 2 end if lIli1IlIlIIIIIliilll1 < li1ilI1IIIli1ilIl1I then lIli1IlIlIIIIIliilll1 = li1ilI1IIIli1ilIl1I end while lIli1IlIlIIIIIliilll1 > 0 do local lIillIIIil1ilI1i1lI = lIli1IlIlIIIIIliilll1 % 2 if lIillIIIil1ilI1i1lI > 0 then lIlII11ii1IiIi1lliIll = lIlII11ii1IiIi1lliIll + IlliIlli11lIiiIllll end lIli1IlIlIIIIIliilll1 = (lIli1IlIlIIIIIliilll1 - lIillIIIil1ilI1i1lI) / 2 IlliIlli11lIiiIllll = IlliIlli11lIiiIllll * 2 end return lIlII11ii1IiIi1lliIll end local function lIIlIlliilll1IiiIl1(lIlIIIill1li1lII11I1i) local ili1Ili1l1li1IIlll1 = { lIlIiiIll1iliIIllIIii(lIlllliI1iI1lIiIiIlli, IiI1IIIiilIii1Iiiil, IiI1IIIiilIii1Iiiil + 3) } IiI1IIIiilIii1Iiiil = IiI1IIIiilIii1Iiiil + 4 local lIli1IlIlIIIIIliilll1 = Ilii11I1i1iI11Il1il(ili1Ili1l1li1IIlll1[1], lIlI11i1iI1IiIilll1II) local li1ilI1IIIli1ilIl1I = Ilii11I1i1iI11Il1il(ili1Ili1l1li1IIlll1[2], lIlI11i1iI1IiIilll1II) local lIlII11ii1IiIi1lliIll = Ilii11I1i1iI11Il1il(ili1Ili1l1li1IIlll1[3], lIlI11i1iI1IiIilll1II) local iIll11llI11Illlil1l = Ilii11I1i1iI11Il1il(ili1Ili1l1li1IIlll1[4], lIlI11i1iI1IiIilll1II) lIlI11i1iI1IiIilll1II = (193 * lIlI11i1iI1IiIilll1II + lIlIIIill1li1lII11I1i) % 256 return iIll11llI11Illlil1l * 16777216 + lIlII11ii1IiIi1lliIll * 65536 + li1ilI1IIIli1ilIl1I * 256 + lIli1IlIlIIIIIliilll1 end local function liliIi1lIIliii1iIIi(liIlil1iIll1IlliIil) local lIl11i1ii1iil1llli1lI = IiIlli1l111ii1iiIl1() local iIIl1111iI11Il1lili = "" for ii1Ill11IIliiIiIiI1 = lIllIIiiiIliI1lIIll11, lIl11i1ii1iil1llli1lI do iIIl1111iI11Il1lili = iIIl1111iI11Il1lili .. iillIIIliIIlll1iiil(Ilii11I1i1iI11Il1il(lIlIiiIll1iliIIllIIii(lIlllliI1iI1lIiIiIlli, IiI1IIIiilIii1Iiiil + ii1Ill11IIliiIiIiI1 - 1), Ili1Il1iIiiIiIIlIiI)) Ili1Il1iIiiIiIIlIiI = (liIlil1iIll1IlliIil * Ili1Il1iIiiIiIIlIiI + 215) % 256 end IiI1IIIiilIii1Iiiil = IiI1IIIiilIii1Iiiil + lIl11i1ii1iil1llli1lI return iIIl1111iI11Il1lili end Ili1Il1iIiiIiIIlIiI = lliI1lIi11iiiliIiii() lIlI11i1iI1IiIilll1II = lliI1lIi11iiiliIiii() local iillIll1lIilI1I1l1l = {} for ii1Ill11IIliiIiIiI1 = lIllIIiiiIliI1lIIll11, lliI1lIi11iiiliIiii() do local IIlllI1I1i11iIiI1I1 = lliI1lIi11iiiliIiii() local IilI1llIIII11iliIlI = (ii1Ill11IIliiIiIiI1 - 1) * 2 iillIll1lIilI1I1l1l[IilI1llIIII11iliIlI] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, 1, 4) iillIll1lIilI1I1l1l[IilI1llIIII11iliIlI + 1] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, 5, 8) end local function lIliiiI1iIllil1I1li() local iiI1ill11llli11IiIl = { nil, {}, nil, {}, {}, {}, nil } local l1IIlili1li1llli1Il = IiIlli1l111ii1iiIl1() - (#{ 6702, 1960, 2432, 563, 2927, 4284, 5949, 2000, 5433, 1569, 1190, 863, 1868, 2709, 1720, 1506, 5250, 1188, 6284, 1630 } + ii1lIli111l11il1lII + 133657) local IilIli1iIl1iIiI1liI = lliI1lIi11iiiliIiii() for ii1Ill11IIliiIiIiI1 = lIllIIiiiIliI1lIIll11, l1IIlili1li1llli1Il do local lIll1iI1iI11IlIiiIIll local lIllIIli11I1II11Ili = lliI1lIi11iiiliIiii() if lIllIIli11I1II11Ili == #{ 6813, 5211, 5294, 1130, 3755, 6619, 64, 3960, 5594, 5604, 2759, 6820 } then lIll1iI1iI11IlIiiIIll = lliI1lIi11iiiliIiii() end if lIllIIli11I1II11Ili == #{ 2146, 6400, 5974, 6347, 6053, 3303, 5444, 5968, 1635, 5615, 1467, 3293, 6345, 5582, 5591, 6806, 3232, 2795, 1201, 3675, 3455, 3412, 2703, 4467 } + ii1lIli111l11il1lII + 1 then lIll1iI1iI11IlIiiIIll = lliI1lIi11iiiliIiii() + IiIlli1l111ii1iiIl1() + lIliIIl1lilII1l1I1I1i() end if lIllIIli11I1II11Ili == #{ 1596, 3416, 6207, 3406, 4230, 4599, 1636, 2321, 2863, 830, 2669, 4326, 4015, 4142, 6637, 5649, 2633, 360, 5929, 2030, 113 } + ii1lIli111l11il1lII + 11 then lIll1iI1iI11IlIiiIIll = #{ 3602, 2960, 2685, 555, 6484, 6687, 1704, 6956, 3004, 1015, 1913, 5855, 421, 1452, 5109, 4710, 4314, 5517, 4951, 834, 3814, 4517, 829 } + ii1lIli111l11il1lII + 7115 == #{ 2885, 717, 6091, 4117, 5596, 2983, 5312, 5890, 1543, 3941, 3114, 2778, 2798, 522, 6436, 5151, 4662, 417, 2919, 1642, 5737, 83 } + ii1lIli111l11il1lII + 44693 end if lIllIIli11I1II11Ili == #{ 6238, 814, 3050, 3017, 2977, 432, 1433, 472, 6121, 4533, 3153, 2533, 3535, 5146, 2699, 4261, 752, 3021, 4621, 3306, 4136, 810, 660, 3693 } + ii1lIli111l11il1lII + 172 then lIll1iI1iI11IlIiiIIll = lliI1lIi11iiiliIiii() + IiIlli1l111ii1iiIl1() + lIliIIl1lilII1l1I1I1i() end if lIllIIli11I1II11Ili == #{ 2017, 2102, 4016, 4446, 5134, 4684, 4261, 6812, 49, 3295, 6370, 907, 2396, 3864, 1346, 2713, 6849, 4464, 5761, 3603, 509, 4541, 4991 } + ii1lIli111l11il1lII + -38 then lIll1iI1iI11IlIiiIIll = lIliIIl1lilII1l1I1I1i() end if lIllIIli11I1II11Ili == #{ 6421, 4834, 5268, 2740, 6170, 2277, 3276, 6943, 6761, 4436, 5553, 1853, 3054, 3502, 3861, 2913, 2056, 2884, 5274, 3204, 2952 } + ii1lIli111l11il1lII + 107 then lIll1iI1iI11IlIiiIIll = #{ 6139, 5994, 2287, 3816, 1546, 2016, 3432, 2892, 2914, 1414, 5655, 6555, 4807, 5945, 4283, 322, 2781, 833, 2691, 2579 } + ii1lIli111l11il1lII + 117611 == #{ 6139, 5994, 2287, 3816, 1546, 2016, 3432, 2892, 2914, 1414, 5655, 6555, 4807, 5945, 4283, 322, 2781, 833, 2691, 2579 } + ii1lIli111l11il1lII + 117611 end if lIllIIli11I1II11Ili == #{ 5785, 2134, 5863, 5020, 1978, 911, 4529, 3884, 4640, 4924, 5767, 689, 3644, 780, 3564, 4598, 972, 6811, 1151, 4821, 578, 4916, 1569, 4857 } + ii1lIli111l11il1lII + 139 then lIll1iI1iI11IlIiiIIll = lliI1lIi11iiiliIiii() end if lIllIIli11I1II11Ili == #{ 4802, 1936, 3997, 4367, 2792, 3875, 4117, 4687, 5806, 996, 4432, 5915, 2196, 825, 3852, 5901, 5524, 1432, 1559, 1021, 3914 } + ii1lIli111l11il1lII + 138 then lIll1iI1iI11IlIiiIIll = lIli1iIiliiii111iiiil(liliIi1lIIliii1iIIi(IilIli1iIl1iIiI1liI), #{ 1974, 5516, 4802, 1249, 3594, 1362 }) end if lIllIIli11I1II11Ili == #{ 249, 6878, 6439, 4594, 1084, 2176, 6235, 3921, 197, 3065, 4573, 851, 6438, 761, 1297, 4102, 6207, 3729, 5220, 272, 4096, 5964, 3114, 1958 } + ii1lIli111l11il1lII + -33 then lIll1iI1iI11IlIiiIIll = IiIlli1l111ii1iiIl1() end iiI1ill11llli11IiIl[6][ii1Ill11IIliiIiIiI1 - lIllIIiiiIliI1lIIll11] = lIll1iI1iI11IlIiiIIll end IiIlli1l111ii1iiIl1() lliI1lIi11iiiliIiii() iiI1ill11llli11IiIl[1] = lliI1lIi11iiiliIiii() lliI1lIi11iiiliIiii() local l1IIlili1li1llli1Il = IiIlli1l111ii1iiIl1() for ii1Ill11IIliiIiIiI1 = lIllIIiiiIliI1lIIll11, l1IIlili1li1llli1Il do iiI1ill11llli11IiIl[4][ii1Ill11IIliiIiIiI1 - lIllIIiiiIliI1lIIll11] = lIliiiI1iIllil1I1li() end IiIlli1l111ii1iiIl1() local lili11l1II11IiI1lii = IiIlli1l111ii1iiIl1() - (#{ 1686, 5053, 5180, 5471, 4033, 6475, 1347, 3895, 3528, 6167, 4475, 1475, 5615, 5727, 748, 6014, 5500, 1644, 3017, 451, 2879 } + ii1lIli111l11il1lII + 133686) local IllIiiIiI11IilI11i1 = lliI1lIi11iiiliIiii() for ii1Ill11IIliiIiIiI1 = lIllIIiiiIliI1lIIll11, lili11l1II11IiI1lii do local lIllIIiIll11ilIi11ill = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local IIlllI1I1i11iIiI1I1 = lIIlIlliilll1IiiIl1(IllIiiIiI11IilI11i1) lIllIIiIll11ilIi11ill[39927] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, #{3211}, #{ 3100, 1510, 6620, 3780, 3883, 313, 4671, 1346, 373 }) lIllIIiIll11ilIi11ill[4] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, #{2024}, #{ 3386, 2487, 2772, 4676, 1542, 1342, 4205, 1825, 2543 }) lIllIIiIll11ilIi11ill[10] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, #{748}, #{ 2250, 4661, 4486, 1032, 2017, 5405, 4972, 3462, 3124, 1659, 5799, 1730, 4063, 6163, 3291, 3473, 586, 6818 }) lIllIIiIll11ilIi11ill[6] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, #{ 1621, 5986, 5299, 1336, 4566, 3087, 6263, 4389, 4967, 2674 }, #{ 2381, 179, 1709, 888, 5754, 5870, 2205, 1823, 2498, 5826, 611, 1104, 3148, 6378, 6433, 6262, 1346, 1962 }) lIllIIiIll11ilIi11ill[9] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, #{ 6709, 2581, 2339, 4782, 4401, 1466, 630, 5068, 2833, 3696, 4639, 4656, 5277, 4495, 3242, 5499, 5461, 4596, 6154 }, #{ 2653, 2780, 6650, 612, 3523, 2422, 6871, 5230, 1294, 2498, 5649, 5156, 2831, 5988, 6233, 3250, 3040, 6944, 38, 6155 } + ii1lIli111l11il1lII + -40) lIllIIiIll11ilIi11ill[2] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, #{ 799, 4733, 5559, 6838, 749, 3150, 6664, 4511, 346, 809, 420, 1250, 4199, 5546, 5902, 2405, 327, 3808, 6528, 863, 5665, 5447, 5801, 3938 } + ii1lIli111l11il1lII + -43, #{ 2851, 5287, 1660, 4888, 640, 2504, 4793, 1899, 6611, 3536, 5312, 5190, 1125, 3962, 764, 1469, 6943, 3828, 6330, 1069, 6887 } + ii1lIli111l11il1lII + -35) lIllIIiIll11ilIi11ill[19614] = I11iIIiiilIlII1liI1(IIlllI1I1i11iIiI1I1, #{ 977, 3372, 2136, 3527, 594, 4555, 2550, 3977, 2770, 4010, 4042, 2846, 5952, 3248, 3810, 823, 5623, 255, 1296 }, #{ 4678, 192, 650, 4874, 455, 3980, 6164, 1370, 4497, 5521, 1158, 1080, 351, 1730, 6134, 5753, 6773, 5432, 4840, 1750, 1553, 6563 } + ii1lIli111l11il1lII + -42) iiI1ill11llli11IiIl[2][ii1Ill11IIliiIiIiI1] = lIllIIiIll11ilIi11ill end for ii1Ill11IIliiIiIiI1 = lIllIIiiiIliI1lIIll11, lili11l1II11IiI1lii do local lIllIIiIll11ilIi11ill = iiI1ill11llli11IiIl[2][ii1Ill11IIliiIiIiI1] local lIl1I1lIl1i1liil1ii1l = iillIll1lIilI1I1l1l[lIllIIiIll11ilIi11ill[2]] if lIl1I1lIl1i1liil1ii1l == #{ 5800, 1154, 6608, 6745 } then lIllIIiIll11ilIi11ill[7] = iiI1ill11llli11IiIl[6][lIllIIiIll11ilIi11ill[10]] end if lIl1I1lIl1i1liil1ii1l == #{2194} and lIllIIiIll11ilIi11ill[4] > 255 then lIllIIiIll11ilIi11ill[5] = true lIllIIiIll11ilIi11ill[8] = iiI1ill11llli11IiIl[6][lIllIIiIll11ilIi11ill[4] - 256] end if lIl1I1lIl1i1liil1ii1l == #{ 3622, 6093, 6299 } then if lIllIIiIll11ilIi11ill[4] > 255 then lIllIIiIll11ilIi11ill[5] = true lIllIIiIll11ilIi11ill[8] = iiI1ill11llli11IiIl[6][lIllIIiIll11ilIi11ill[4] - 256] end if lIllIIiIll11ilIi11ill[6] > 255 then lIllIIiIll11ilIi11ill[3] = true lIllIIiIll11ilIi11ill[1] = iiI1ill11llli11IiIl[6][lIllIIiIll11ilIi11ill[6] - 256] end end if lIl1I1lIl1i1liil1ii1l == #{3640, 4134} and lIllIIiIll11ilIi11ill[6] > 255 then lIllIIiIll11ilIi11ill[3] = true lIllIIiIll11ilIi11ill[1] = iiI1ill11llli11IiIl[6][lIllIIiIll11ilIi11ill[6] - 256] end end IiIlli1l111ii1iiIl1() iiI1ill11llli11IiIl[3] = lliI1lIi11iiiliIiii() lliI1lIi11iiiliIiii() local l1IIlili1li1llli1Il = IiIlli1l111ii1iiIl1() for ii1Ill11IIliiIiIiI1 = lIllIIiiiIliI1lIIll11, l1IIlili1li1llli1Il do iiI1ill11llli11IiIl[5][ii1Ill11IIliiIiIiI1] = IiIlli1l111ii1iiIl1() end iiI1ill11llli11IiIl[7] = lliI1lIi11iiiliIiii() return iiI1ill11llli11IiIl end local function iIiiI111l1l1Ii1ll11(iiI1ill11llli11IiIl, iiiil1iiliiI1I11Ili, ll11ill1ii1iIll1I1i) local iIIiiI1li1iI1111ili, iIliiili1I1I1i1illI = 18, -1 local IiIiI1l1IIIiIll1iIi = iiI1ill11llli11IiIl[2] local iiIli1IIll111i11ii1 = 7 local IIIiiiI1lllIi1lIII1 = iiI1ill11llli11IiIl[4] local ili1i1lIi11lIIiIlI1 = iiI1ill11llli11IiIl[3] local lIllil1Il1liiiIIllilI = iiI1ill11llli11IiIl[1] local i11lIiiilil1IiIIIl1 = 2 local lIl1iiiIIill1l11lI11I = iiI1ill11llli11IiIl[5] local lIlii1I1llIllIl11IlIi = 4 local function lIlI1Iil1Ii1l1iii1l1i(...) local lIl11llII1lliIlllliIl = 0 local lIllI1l1liil1i1IIi1ii = { lIllII11Iii1iIIiI1II1({}, 1, lIllil1Il1liiiIIllilI) } local liI11iiIIl1IliiliIl = 1 local iliI1iI1I1il11l1II1 = {} local lIl1IIIiiIIl11i1lliii = {} local iiiil1iiliiI1I11Ili = i11IliilIIlliiii11I() local ilI1111IliIiiiliIlI = { ... } local Iiili11lIii1I11il1l = #ilI1111IliIiiiliIlI - 1 for ii1Ill11IIliiIiIiI1 = 0, Iiili11lIii1I11il1l do if ii1Ill11IIliiIiIiI1 < ili1i1lIi11lIIiIlI1 then lIllI1l1liil1i1IIi1ii[ii1Ill11IIliiIiIiI1] = ilI1111IliIiiiliIlI[ii1Ill11IIliiIiIiI1 + 1] end end local function li1IiilI11IlI11lI1I(...) local lIlII11ii1IiIi1lliIll = iIlilliI1Ill1IliII1("#", ...) local I1lil11IlIliiIii1l1 = { ... } return lIlII11ii1IiIi1lliIll, I1lil11IlIliiIii1l1 end local function i1l1iilIl1iilIIiiII() while true do local IlIiIli1i1I1i1iII1l = IiIiI1l1IIIiIll1iIi[liI11iiIIl1IliiliIl] local lIl1I1iIIiI1lIiil1iii = IlIiIli1i1I1i1iII1l[2] liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl + 1 if lIl1I1iIIiI1lIiil1iii < 9 then if lIl1I1iIIiI1lIiil1iii >= 4 then if lIl1I1iIIiI1lIiil1iii >= 6 then if lIl1I1iIIiI1lIiil1iii < 7 then local IilIIl11i11lIilllli = IlIiIli1i1I1i1iII1l[9] local ilI1111IliIiiiliIlI = IlIiIli1i1I1i1iII1l[4] local ilIl1iilIilIIIi11lI = IlIiIli1i1I1i1iII1l[6] local lIlIIIIilili1Il1li1ll, Ill1IlI1lii11Ii1l1l, i1l1iilIl1iilIIiiII if ilI1111IliIiiiliIlI ~= 1 then if ilI1111IliIiiiliIlI ~= 0 then Ill1IlI1lii11Ii1l1l = IilIIl11i11lIilllli + ilI1111IliIiiiliIlI - 1 else Ill1IlI1lii11Ii1l1l = lIl11llII1lliIlllliIl end Ill1IlI1lii11Ii1l1l, lIlIIIIilili1Il1li1ll = li1IiilI11IlI11lI1I(lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli](lIllII11Iii1iIIiI1II1(lIllI1l1liil1i1IIi1ii, IilIIl11i11lIilllli + 1, Ill1IlI1lii11Ii1l1l))) else Ill1IlI1lii11Ii1l1l, lIlIIIIilili1Il1li1ll = li1IiilI11IlI11lI1I(lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli]()) end if ilIl1iilIilIIIi11lI ~= 1 then if ilIl1iilIilIIIi11lI ~= 0 then Ill1IlI1lii11Ii1l1l = IilIIl11i11lIilllli + ilIl1iilIilIIIi11lI - 2 lIl11llII1lliIlllliIl = Ill1IlI1lii11Ii1l1l + 1 else Ill1IlI1lii11Ii1l1l = Ill1IlI1lii11Ii1l1l + IilIIl11i11lIilllli - 1 lIl11llII1lliIlllliIl = Ill1IlI1lii11Ii1l1l end i1l1iilIl1iilIIiiII = 0 for ii1Ill11IIliiIiIiI1 = IilIIl11i11lIilllli, Ill1IlI1lii11Ii1l1l do i1l1iilIl1iilIIiiII = i1l1iilIl1iilIIiiII + 1 lIllI1l1liil1i1IIi1ii[ii1Ill11IIliiIiIiI1] = lIlIIIIilili1Il1li1ll[i1l1iilIl1iilIIiiII] end else lIl11llII1lliIlllliIl = IilIIl11i11lIilllli - 1 end for ii1Ill11IIliiIiIiI1 = lIl11llII1lliIlllliIl + 1, lIllil1Il1liiiIIllilI do lIllI1l1liil1i1IIi1ii[ii1Ill11IIliiIiIiI1] = nil end elseif lIl1I1iIIiI1lIiil1iii ~= 8 then iiiil1iiliiI1I11Ili[IlIiIli1i1I1i1iII1l[7]] = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] elseif IlIiIli1i1I1i1iII1l[4] == 166 then liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl - 1 IiIiI1l1IIIiIll1iIi[liI11iiIIl1IliiliIl] = { [2] = 18, [9] = (IlIiIli1i1I1i1iII1l[9] - 164) % 256, [4] = (IlIiIli1i1I1i1iII1l[6] - 164) % 256 } else local IilIIl11i11lIilllli = IlIiIli1i1I1i1iII1l[9] local IilI1llIIII11iliIlI = IilIIl11i11lIilllli + 2 local lIlIli1liIi1iiIIiiiiI = { lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli](lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli + 1], lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli + 2]) } for ii1Ill11IIliiIiIiI1 = 1, IlIiIli1i1I1i1iII1l[6] do lIllI1l1liil1i1IIi1ii[IilI1llIIII11iliIlI + ii1Ill11IIliiIiIiI1] = lIlIli1liIi1iiIIiiiiI[ii1Ill11IIliiIiIiI1] end if lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli + 3] ~= nil then lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli + 2] = lIllI1l1liil1i1IIi1ii[IilIIl11i11lIilllli + 3] else liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl + 1 end end elseif lIl1I1iIIiI1lIiil1iii == 5 then lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = IlIiIli1i1I1i1iII1l[7] else local lIlII11ii1IiIi1lliIll if IlIiIli1i1I1i1iII1l[3] then lIlII11ii1IiIi1lliIll = IlIiIli1i1I1i1iII1l[1] else lIlII11ii1IiIi1lliIll = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[6]] end lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[4]][lIlII11ii1IiIi1lliIll] end elseif lIl1I1iIIiI1lIiil1iii < 2 then if lIl1I1iIIiI1lIiil1iii ~= 1 then lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = iiiil1iiliiI1I11Ili[IlIiIli1i1I1i1iII1l[7]] else lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = IlIiIli1i1I1i1iII1l[4] ~= 0 if IlIiIli1i1I1i1iII1l[6] ~= 0 then liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl + 1 end end elseif lIl1I1iIIiI1lIiil1iii == 3 then lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = { lIllII11Iii1iIIiI1II1(iiI1I11I11Ill1lIIIl, 1, IlIiIli1i1I1i1iII1l[4] == 0 and 255 or IlIiIli1i1I1i1iII1l[4]) } elseif IlIiIli1i1I1i1iII1l[4] == 121 then liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl - 1 IiIiI1l1IIIiIll1iIi[liI11iiIIl1IliiliIl] = { [2] = 13, [9] = (IlIiIli1i1I1i1iII1l[9] - 194) % 256, [4] = (IlIiIli1i1I1i1iII1l[6] - 194) % 256 } elseif IlIiIli1i1I1i1iII1l[4] == 22 then liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl - 1 IiIiI1l1IIIiIll1iIi[liI11iiIIl1IliiliIl] = { [2] = 16, [9] = (IlIiIli1i1I1i1iII1l[9] - 213) % 256, [4] = (IlIiIli1i1I1i1iII1l[6] - 213) % 256 } elseif not not lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] == (IlIiIli1i1I1i1iII1l[6] == 0) then liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl + 1 end elseif lIl1I1iIIiI1lIiil1iii >= 14 then if lIl1I1iIIiI1lIiil1iii >= 16 then if lIl1I1iIIiI1lIiil1iii >= 17 then if lIl1I1iIIiI1lIiil1iii ~= 18 then local lIlIli1liIi1iiIIiiiiI = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[4]] for ii1Ill11IIliiIiIiI1 = IlIiIli1i1I1i1iII1l[4] + 1, IlIiIli1i1I1i1iII1l[6] do lIlIli1liIi1iiIIiiiiI = lIlIli1liIi1iiIIiiiiI .. lIllI1l1liil1i1IIi1ii[ii1Ill11IIliiIiIiI1] end lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = lIlIli1liIi1iiIIiiiiI else lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[4]] end else iliI1iI1I1il11l1II1[lIllI1l1liil1i1IIi1ii] = nil local IilIIl11i11lIilllli = IlIiIli1i1I1i1iII1l[9] local lII11lIlll1l1Iili1i = IlIiIli1i1I1i1iII1l[4] if lII11lIlll1l1Iili1i == 1 then return true end local Ill1IlI1lii11Ii1l1l = IilIIl11i11lIilllli + lII11lIlll1l1Iili1i - 2 if lII11lIlll1l1Iili1i == 0 then Ill1IlI1lii11Ii1l1l = lIl11llII1lliIlllliIl end return true, IilIIl11i11lIilllli, Ill1IlI1lii11Ii1l1l end elseif lIl1I1iIIiI1lIiil1iii == 15 then local lIlIIiIilill1IiiIii = IIIiiiI1lllIi1lIII1[IlIiIli1i1I1i1iII1l[10]] local lIlI1l1lIiIIl1l1IIl1l = {} if lIlIIiIilill1IiiIii[iiIli1IIll111i11ii1] > 0 then do local lIliI1iiliIii1I1iIl1i = {} lIlI1l1lIiIIl1l1IIl1l = lIlIlllIIlllliliI1I({}, { __index = function(I1lil11IlIliiIii1l1, IlII11liIiIIIiiIIIl) local l1II1iiIiIIii1i1Iii = lIliI1iiliIii1I1iIl1i[IlII11liIiIIIiiIIIl] return l1II1iiIiIIii1i1Iii[1][l1II1iiIiIIii1i1Iii[2]] end, __newindex = function(I1lil11IlIliiIii1l1, IlII11liIiIIIiiIIIl, i11lllII1lI11ilI1ll) local l1II1iiIiIIii1i1Iii = lIliI1iiliIii1I1iIl1i[IlII11liIiIIIiiIIIl] l1II1iiIiIIii1i1Iii[1][l1II1iiIiIIii1i1Iii[2]] = i11lllII1lI11ilI1ll end }) for ii1Ill11IIliiIiIiI1 = 1, lIlIIiIilill1IiiIii[iiIli1IIll111i11ii1] do local Illl1I1Iil11li1iI11 = IiIiI1l1IIIiIll1iIi[liI11iiIIl1IliiliIl] if Illl1I1Iil11li1iI11[i11lIiiilil1IiIIIl1] == iIIiiI1li1iI1111ili then lIliI1iiliIii1I1iIl1i[ii1Ill11IIliiIiIiI1 - 1] = { lIllI1l1liil1i1IIi1ii, Illl1I1Iil11li1iI11[lIlii1I1llIllIl11IlIi] } elseif Illl1I1Iil11li1iI11[i11lIiiilil1IiIIIl1] == iIliiili1I1I1i1illI then lIliI1iiliIii1I1iIl1i[ii1Ill11IIliiIiIiI1 - 1] = { ll11ill1ii1iIll1I1i, Illl1I1Iil11li1iI11[lIlii1I1llIllIl11IlIi] } end liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl + 1 end if not iliI1iI1I1il11l1II1[lIllI1l1liil1i1IIi1ii] then iliI1iI1I1il11l1II1[lIllI1l1liil1i1IIi1ii] = {lIliI1iiliIii1I1iIl1i} else lliIi11lIlli1lIliIi(iliI1iI1I1il11l1II1[lIllI1l1liil1i1IIi1ii], lIliI1iiliIii1I1iIl1i) end end end local llll111ll1iiiI1IllI = iIiiI111l1l1Ii1ll11(lIlIIiIilill1IiiIii, iiiil1iiliiI1I11Ili, lIlI1l1lIiIIl1l1IIl1l) lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = llll111ll1iiiI1IllI elseif IlIiIli1i1I1i1iII1l[6] == 205 then liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl - 1 IiIiI1l1IIIiIll1iIi[liI11iiIIl1IliiliIl] = { [2] = 2, [9] = (IlIiIli1i1I1i1iII1l[9] - 226) % 256, [6] = (IlIiIli1i1I1i1iII1l[4] - 226) % 256 } else lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = not lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[4]] end elseif lIl1I1iIIiI1lIiil1iii < 11 then if lIl1I1iIIiI1lIiil1iii ~= 10 then local li1ilI1IIIli1ilIl1I, lIlII11ii1IiIi1lliIll if IlIiIli1i1I1i1iII1l[5] then li1ilI1IIIli1ilIl1I = IlIiIli1i1I1i1iII1l[8] else li1ilI1IIIli1ilIl1I = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[4]] end if IlIiIli1i1I1i1iII1l[3] then lIlII11ii1IiIi1lliIll = IlIiIli1i1I1i1iII1l[1] else lIlII11ii1IiIi1lliIll = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[6]] end if li1ilI1IIIli1ilIl1I == lIlII11ii1IiIi1lliIll ~= (IlIiIli1i1I1i1iII1l[9] ~= 0) then liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl + 1 end else local lll1lIIlii11iI1IiIi = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[4]] local lIlII11ii1IiIi1lliIll if IlIiIli1i1I1i1iII1l[3] then lIlII11ii1IiIi1lliIll = IlIiIli1i1I1i1iII1l[1] else lIlII11ii1IiIi1lliIll = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[6]] end lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9] + 1] = lll1lIIlii11iI1IiIi lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] = lll1lIIlii11iI1IiIi[lIlII11ii1IiIi1lliIll] end elseif lIl1I1iIIiI1lIiil1iii >= 12 then if lIl1I1iIIiI1lIiil1iii == 13 then ll11ill1ii1iIll1I1i[IlIiIli1i1I1i1iII1l[4]] = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]] else local li1ilI1IIIli1ilIl1I, lIlII11ii1IiIi1lliIll if IlIiIli1i1I1i1iII1l[5] then li1ilI1IIIli1ilIl1I = IlIiIli1i1I1i1iII1l[8] else li1ilI1IIIli1ilIl1I = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[4]] end if IlIiIli1i1I1i1iII1l[3] then lIlII11ii1IiIi1lliIll = IlIiIli1i1I1i1iII1l[1] else lIlII11ii1IiIi1lliIll = lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[6]] end lIllI1l1liil1i1IIi1ii[IlIiIli1i1I1i1iII1l[9]][li1ilI1IIIli1ilIl1I] = lIlII11ii1IiIi1lliIll end else liI11iiIIl1IliiliIl = liI11iiIIl1IliiliIl + (IlIiIli1i1I1i1iII1l[10] - illlliIiil1ili1lI11) end end end local lIlIIlIi1iil1lIlIIliI, iIIl1111iI11Il1lili, iIlilI111IIIlIIiiiI, IlIiI1iI11lIiIliIil = IllIilIIlI1IiliI1li(i1l1iilIl1iilIIiiII) if lIlIIlIi1iil1lIlIIliI then if iIlilI111IIIlIIiiiI then return lIllII11Iii1iIIiI1II1(lIllI1l1liil1i1IIi1ii, iIlilI111IIIlIIiiiI, IlIiI1iI11lIiIliIil) end else lIlllIIllIi1I11IIilIl("Luraph Script:" .. (lIl1iiiIIill1l11lI11I[liI11iiIIl1IliiliIl - 1] or "") .. ": " .. lIlIIllIIiIlii1iIIIl1(iIIl1111iI11Il1lili), 0) end end li11iIlIli1i1lliIil(lIlI1Iil1Ii1l1iii1l1i, iiiil1iiliiI1I11Ili) return lIlI1Iil1Ii1l1iii1l1i end local ii1I1iill1iIllll11I = lIliiiI1iIllil1I1li() return iIiiI111l1l1Ii1ll11(ii1I1iill1iIllll11I, iiiil1iiliiI1I11Ili)() end return liIlI1i1iiI1ilI1I1ii11IliilIIlliiii11I()) 