-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local llIlI1IliIIIIIliI1l = assert local li1iiilII1I1iIIii11 = select local I1llIi11iI1lI1i1Iii = tonumber local i1II1IilllI11lii1lI = unpack local lIlii1ilil11lii1l11 = pcall local iliIii1illII1II1l1I = setfenv local llIi1liI1Ii11iiII1i = setmetatable local IIlIIl1l1ll1iiIIIli = type local illIli1IIIlI1lI1lii = getfenv local iII111IilIiIIii1l1i = tostring local lIlli1lli11IiIIilill1 = error local IilI1iilllil1IlllII = string.sub local lIlliiIii1il1Ilil11i1 = string.byte local Iill1il11iIlIi11Iii = string.char local li111l1lllliIiiiill = string.rep local ii1iliiiIIiIIiii11I = string.gsub local iil11illlIIilll1Il1 = string.match local iillilIiiilIIIiII1l = table.insert local l1lii1iI1i11IlI1iIl = lIlliiIii1il1Ilil11i1("O", 1) local I11llIl1i1iI1IIllII, I1i11lIiliiI111iI1l = #{3721}, #{ 2947, 5158, 1959, 306, 3185, 6434, 5564, 4953, 6125, 4031, 5266, 3367, 1811, 1209, 4845, 1244, 1711, 4761, 1517, 3849, 6117, 5433 } + l1lii1iI1i11IlI1iIl + 130970 local lIliilillilllIIIiiiil = {} local lIl1Ii11iI1iIiiIIi111 = 1 local iiillII1111111iIIll, lIliIII1i11liili1IlI1 local function lIlII1llliiIi1liIl1Ii(ili1IliiIil11IlIiII, lIlI1lIiI1IIliiii111I) local iIliIllI1IiIiI1llli ili1IliiIil11IlIiII = ii1iliiiIIiIIiii11I(IilI1iilllil1IlllII(ili1IliiIil11IlIiII, 5), "..", function(iI111I1IiIIllIl1lii) if lIlliiIii1il1Ilil11i1(iI111I1IiIIllIl1lii, 2) == 72 then iIliIllI1IiIiI1llli = I1llIi11iI1lI1i1Iii(IilI1iilllil1IlllII(iI111I1IiIIllIl1lii, 1, 1)) return "" else local iIi1ilili11Il1l1liI = Iill1il11iIlIi11Iii(I1llIi11iI1lI1i1Iii(iI111I1IiIIllIl1lii, 16)) if iIliIllI1IiIiI1llli then local iiI1iI1il1lIiI1illi = li111l1lllliIiiiill(iIi1ilili11Il1l1liI, iIliIllI1IiIiI1llli) iIliIllI1IiIiI1llli = nil return iiI1iI1il1lIiI1illi else return iIi1ilili11Il1l1liI end end end) local function I11I1i1IlIilliIiIii() local l11ii1I1i1IiiIl1lIi = lIlliiIii1il1Ilil11i1(ili1IliiIil11IlIiII, lIl1Ii11iI1iIiiIIi111, lIl1Ii11iI1iIiiIIi111) lIl1Ii11iI1iIiiIIi111 = lIl1Ii11iI1iIiiIIi111 + 1 return l11ii1I1i1IiiIl1lIi end local function iIlIIl11IilI1il11ii() local l11ii1I1i1IiiIl1lIi, iIi1ilili11Il1l1liI, iiI1iI1il1lIiI1illi, i1IIIi1illIi1Ii11iI = lIlliiIii1il1Ilil11i1(ili1IliiIil11IlIiII, lIl1Ii11iI1iIiiIIi111, lIl1Ii11iI1iIiiIIi111 + 3) lIl1Ii11iI1iIiiIIi111 = lIl1Ii11iI1iIiiIIi111 + 4 return i1IIIi1illIi1Ii11iI * 16777216 + iiI1iI1il1lIiI1illi * 65536 + iIi1ilili11Il1l1liI * 256 + l11ii1I1i1IiiIl1lIi end local function I1lIiI11IiI1l1llIII(lIllliliIiiI1i1IillIi, lIl1lIllil1111Il1lI1I, IIlll1lii1I1i1iliIi) if IIlll1lii1I1i1iliIi then local il1li1lll111l1IIlIl, llIli1lllIli1i11liI = 0, 0 for lIlIi1I1IIlIIlllIll1l = lIl1lIllil1111Il1lI1I, IIlll1lii1I1i1iliIi do il1li1lll111l1IIlIl = il1li1lll111l1IIlIl + 2 ^ llIli1lllIli1i11liI * I1lIiI11IiI1l1llIII(lIllliliIiiI1i1IillIi, lIlIi1I1IIlIIlllIll1l) llIli1lllIli1i11liI = llIli1lllIli1i11liI + 1 end return il1li1lll111l1IIlIl else local lIll11IIII1l1ll1lllll = 2 ^ (lIl1lIllil1111Il1lI1I - 1) return lIll11IIII1l1ll1lllll <= lIllliliIiiI1i1IillIi % (lIll11IIII1l1ll1lllll + lIll11IIII1l1ll1lllll) and 1 or 0 end end local function II11I1lili1ii1lIill() local l11ii1I1i1IiiIl1lIi, iIi1ilili11Il1l1liI = iIlIIl11IilI1il11ii(), iIlIIl11IilI1il11ii() if l11ii1I1i1IiiIl1lIi == 0 and iIi1ilili11Il1l1liI == 0 then return 0 end return (-2 * I1lIiI11IiI1l1llIII(iIi1ilili11Il1l1liI, 32) + 1) * 2 ^ (I1lIiI11IiI1l1llIII(iIi1ilili11Il1l1liI, 21, 31) - 1023) * ((I1lIiI11IiI1l1llIII(iIi1ilili11Il1l1liI, 1, 20) * 4294967296 + l11ii1I1i1IiiIl1lIi) / 4503599627370496 + 1) end local i1lllIl1illiiilli11 = bit or bit32 local iII1i1illI1I1liIlli = i1lllIl1illiiilli11 and i1lllIl1illiiilli11.bxor or function(l11ii1I1i1IiiIl1lIi, iIi1ilili11Il1l1liI) local ll1il1lllill1IlIl11 = 1 local iiI1iI1il1lIiI1illi = 0 while l11ii1I1i1IiiIl1lIi > 0 and iIi1ilili11Il1l1liI > 0 do local i1li11ilII1l1i111Ii = l11ii1I1i1IiiIl1lIi % 2 local llllIliIIIl1lii1iII = iIi1ilili11Il1l1liI % 2 if i1li11ilII1l1i111Ii ~= llllIliIIIl1lii1iII then iiI1iI1il1lIiI1illi = iiI1iI1il1lIiI1illi + ll1il1lllill1IlIl11 end l11ii1I1i1IiiIl1lIi = (l11ii1I1i1IiiIl1lIi - i1li11ilII1l1i111Ii) / 2 iIi1ilili11Il1l1liI = (iIi1ilili11Il1l1liI - llllIliIIIl1lii1iII) / 2 ll1il1lllill1IlIl11 = ll1il1lllill1IlIl11 * 2 end if l11ii1I1i1IiiIl1lIi < iIi1ilili11Il1l1liI then l11ii1I1i1IiiIl1lIi = iIi1ilili11Il1l1liI end while l11ii1I1i1IiiIl1lIi > 0 do local i1li11ilII1l1i111Ii = l11ii1I1i1IiiIl1lIi % 2 if i1li11ilII1l1i111Ii > 0 then iiI1iI1il1lIiI1illi = iiI1iI1il1lIiI1illi + ll1il1lllill1IlIl11 end l11ii1I1i1IiiIl1lIi = (l11ii1I1i1IiiIl1lIi - i1li11ilII1l1i111Ii) / 2 ll1il1lllill1IlIl11 = ll1il1lllill1IlIl11 * 2 end return iiI1iI1il1lIiI1illi end local function ilIlI11IIllllliI1Ii(ll1I1li1111lIlIlIIl) local lIlliIi1llIili1lil1l1 = { lIlliiIii1il1Ilil11i1(ili1IliiIil11IlIiII, lIl1Ii11iI1iIiiIIi111, lIl1Ii11iI1iIiiIIi111 + 3) } lIl1Ii11iI1iIiiIIi111 = lIl1Ii11iI1iIiiIIi111 + 4 local l11ii1I1i1IiiIl1lIi = iII1i1illI1I1liIlli(lIlliIi1llIili1lil1l1[1], lIliIII1i11liili1IlI1) local iIi1ilili11Il1l1liI = iII1i1illI1I1liIlli(lIlliIi1llIili1lil1l1[2], lIliIII1i11liili1IlI1) local iiI1iI1il1lIiI1illi = iII1i1illI1I1liIlli(lIlliIi1llIili1lil1l1[3], lIliIII1i11liili1IlI1) local i1IIIi1illIi1Ii11iI = iII1i1illI1I1liIlli(lIlliIi1llIili1lil1l1[4], lIliIII1i11liili1IlI1) lIliIII1i11liili1IlI1 = (41 * lIliIII1i11liili1IlI1 + ll1I1li1111lIlIlIIl) % 256 return i1IIIi1illIi1Ii11iI * 16777216 + iiI1iI1il1lIiI1illi * 65536 + iIi1ilili11Il1l1liI * 256 + l11ii1I1i1IiiIl1lIi end local function iIlll1i1iliIillli1l(lIlil1I1Illi11ii1IllI) local lIIIlliI1IilliiIll1 = iIlIIl11IilI1il11ii() local iiliIIIlil1Ii1Ili11 = "" for lIlIi1I1IIlIIlllIll1l = I11llIl1i1iI1IIllII, lIIIlliI1IilliiIll1 do iiliIIIlil1Ii1Ili11 = iiliIIIlil1Ii1Ili11 .. Iill1il11iIlIi11Iii(iII1i1illI1I1liIlli(lIlliiIii1il1Ilil11i1(ili1IliiIil11IlIiII, lIl1Ii11iI1iIiiIIi111 + lIlIi1I1IIlIIlllIll1l - 1), iiillII1111111iIIll)) iiillII1111111iIIll = (lIlil1I1Illi11ii1IllI * iiillII1111111iIIll + 177) % 256 end lIl1Ii11iI1iIiiIIi111 = lIl1Ii11iI1iIiiIIi111 + lIIIlliI1IilliiIll1 return iiliIIIlil1Ii1Ili11 end iiillII1111111iIIll = I11I1i1IlIilliIiIii() lIliIII1i11liili1IlI1 = I11I1i1IlIilliIiIii() local ll1liiII11I11iiiiII = {} for lIlIi1I1IIlIIlllIll1l = I11llIl1i1iI1IIllII, I11I1i1IlIilliIiIii() do local lllIIlliI1IiI11Ii11 = I11I1i1IlIilliIiIii() local l1lllIillIIIII1ii11 = (lIlIi1I1IIlIIlllIll1l - 1) * 2 ll1liiII11I11iiiiII[l1lllIillIIIII1ii11] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, 1, 4) ll1liiII11I11iiiiII[l1lllIillIIIII1ii11 + 1] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, 5, 8) end local function lIl1lllii1iii1IlIi1i1() local iIllllI1l1li11iI1li = { nil, {}, {}, nil, {}, nil, {} } local I111ilIIliiIilli1Ii = iIlIIl11IilI1il11ii() - (#{ 6468, 3503, 1644, 1319, 6614, 50, 5202, 2298, 1198, 1067, 2563, 5530, 3971, 3531, 2723, 1664, 2988, 6054, 285, 4450, 5429 } + l1lii1iI1i11IlI1iIl + 133601) local lIiill1I11Iiiillil1 = I11I1i1IlIilliIiIii() for lIlIi1I1IIlIIlllIll1l = I11llIl1i1iI1IIllII, I111ilIIliiIilli1Ii do local II111111i11iilIlIii = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lllIIlliI1IiI11Ii11 = ilIlI11IIllllliI1Ii(lIiill1I11Iiiillil1) II111111i11iilIlIii[10] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{ 3988, 6743, 4303, 3732, 911, 230, 171, 5593, 4060, 4251 }, #{ 3030, 2495, 1489, 3315, 5235, 673, 1473, 6292, 2847, 4718, 1775, 2986, 5990, 484, 534, 794, 527, 587 }) II111111i11iilIlIii[7] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{6397}, #{ 4538, 1731, 5641, 5412, 4405, 2802, 6674, 6286, 3250, 3107, 6930, 6709, 298, 5015, 4758, 2193, 4825, 3747 }) II111111i11iilIlIii[9] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{ 1004, 2311, 3021, 6489, 5940, 756, 1820, 5680, 1764, 211, 1919, 6458, 5233, 4814, 2177, 4641, 324, 6472, 6174 }, #{ 5419, 982, 5051, 1921, 5209, 2481, 2748, 5739, 6240, 4353, 5967, 6899, 3339, 6868, 3545, 1452, 6, 5548, 2860, 2722, 1191 } + l1lii1iI1i11IlI1iIl + -74) II111111i11iilIlIii[1] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{4097}, #{ 5215, 5814, 5468, 913, 4455, 5557, 5854, 6519, 1175 }) II111111i11iilIlIii[4] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{ 4295, 4968, 809, 6192, 938, 6258, 6, 4346, 4113, 6077, 2296, 6722, 3731, 2223, 6498, 2908, 4052, 3003, 1485, 2278, 469 } + l1lii1iI1i11IlI1iIl + -73, #{ 980, 2768, 3366, 2965, 4105, 977, 5591, 37, 3440, 864, 1910, 4445, 4497, 6473, 2545, 5726, 1497, 6943, 5687, 3556, 3791, 1284 } + l1lii1iI1i11IlI1iIl + -69) II111111i11iilIlIii[14993] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{ 2710, 5838, 3579, 2527, 5632, 6283, 6138, 5651, 3195, 6568 }, #{ 2771, 3911, 3851, 2788, 2341, 3534, 2938, 316, 4067, 1480, 4644, 526, 3742, 3140, 668, 499, 4654, 1327 }) II111111i11iilIlIii[69929] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{1867}, #{ 6374, 1194, 5423, 3493, 316, 52, 290, 5939, 1950 }) II111111i11iilIlIii[126367] = I1lIiI11IiI1l1llIII(lllIIlliI1IiI11Ii11, #{ 2710, 5838, 3579, 2527, 5632, 6283, 6138, 5651, 3195, 6568 }, #{ 2771, 3911, 3851, 2788, 2341, 3534, 2938, 316, 4067, 1480, 4644, 526, 3742, 3140, 668, 499, 4654, 1327 }) iIllllI1l1li11iI1li[5][lIlIi1I1IIlIIlllIll1l] = II111111i11iilIlIii end iIllllI1l1li11iI1li[4] = I11I1i1IlIilliIiIii() iIlIIl11IilI1il11ii() iIllllI1l1li11iI1li[1] = I11I1i1IlIilliIiIii() iIlIIl11IilI1il11ii() local I1ll1iii1i111l11iil = iIlIIl11IilI1il11ii() - (#{ 1291, 5201, 6454, 895, 5346, 2866, 2231, 2318, 1387, 6197, 3499, 2203, 2966, 5538, 6585, 5819, 3157, 3220, 3280, 3410, 3386 } + l1lii1iI1i11IlI1iIl + 133605) local lIiIl1IlIiII1iI1lIi = I11I1i1IlIilliIiIii() for lIlIi1I1IIlIIlllIll1l = I11llIl1i1iI1IIllII, I1ll1iii1i111l11iil do local iil1IliiI1Ii1I11I1I local IIlIIl1l1ll1iiIIIli = I11I1i1IlIilliIiIii() if IIlIIl1l1ll1iiIIIli == #{ 4028, 6471, 430, 4503, 5985, 3729, 6175, 3877, 3297, 1891, 28, 3041, 6336, 4926, 611, 6753, 6172, 6655, 4762, 6470, 1650, 2334, 1701 } + l1lii1iI1i11IlI1iIl + -36 then iil1IliiI1Ii1I11I1I = #{ 5803, 5589, 1584, 1318, 6050, 5804, 5266, 5623, 3619, 528, 4485, 631, 5760, 372, 5024, 1983, 2836, 2256, 3398, 2269 } + l1lii1iI1i11IlI1iIl + 33935 == #{ 4840, 674, 3567, 5329, 5019, 6078, 5567, 6810, 456, 3041, 1212, 6805, 4194, 4810, 3310, 6358, 4794, 1241, 3417, 2368, 1933, 71 } + l1lii1iI1i11IlI1iIl + 50008 end if IIlIIl1l1ll1iiIIIli == #{ 1318, 6676, 2354, 2356, 3236, 3918, 4289, 4821, 1252, 5831, 1931, 4969, 4147, 1654, 373, 4025, 3243, 6867, 5225, 1481, 6820 } + l1lii1iI1i11IlI1iIl + 37 then iil1IliiI1Ii1I11I1I = II11I1lili1ii1lIill() + II11I1lili1ii1lIill() end if IIlIIl1l1ll1iiIIIli == #{ 4166, 1689, 289, 3651, 614, 3009, 1848, 4863, 3857, 23, 850, 1239, 622, 4231, 4626, 1059, 6813, 4555, 3221, 1403, 3843, 5988, 5218, 4223 } + l1lii1iI1i11IlI1iIl + 108 then iil1IliiI1Ii1I11I1I = #{ 1404, 4211, 347, 6823, 6522, 5530, 2673, 4546, 4367, 2757, 3901, 4815, 553, 3950, 898, 4174, 391, 3580, 5719, 5252, 5916, 6675 } + l1lii1iI1i11IlI1iIl + 68387 == #{ 1404, 4211, 347, 6823, 6522, 5530, 2673, 4546, 4367, 2757, 3901, 4815, 553, 3950, 898, 4174, 391, 3580, 5719, 5252, 5916, 6675 } + l1lii1iI1i11IlI1iIl + 68387 end if IIlIIl1l1ll1iiIIIli == #{ 6138, 3042, 765, 951, 2515, 3363, 3404, 5801, 3920, 5559, 807, 2450, 4780, 4505, 2426, 1607, 4253, 5406, 2707, 2065, 6512, 4994 } + l1lii1iI1i11IlI1iIl + -61 then iil1IliiI1Ii1I11I1I = IilI1iilllil1IlllII(iIlll1i1iliIillli1l(lIiIl1IlIiII1iI1lIi), #{ 1286, 1470, 3903, 5410, 684 }) end if IIlIIl1l1ll1iiIIIli == #{ 1183, 1459, 975, 953, 1029, 1454, 5834, 1125, 3666, 6944, 5319, 4088, 2511, 5860, 3876, 4512, 4305, 714, 5452, 2819, 269 } + l1lii1iI1i11IlI1iIl + 36 then iil1IliiI1Ii1I11I1I = I11I1i1IlIilliIiIii() + iIlIIl11IilI1il11ii() + II11I1lili1ii1lIill() end if IIlIIl1l1ll1iiIIIli == #{ 4628, 4816, 2630, 2057, 1370, 6574, 766, 6756, 2657, 4236, 952, 990, 1539, 4063, 5547, 191, 997, 4569, 3063, 4132, 2981 } + l1lii1iI1i11IlI1iIl + -70 then iil1IliiI1Ii1I11I1I = IilI1iilllil1IlllII(iIlll1i1iliIillli1l(lIiIl1IlIiII1iI1lIi), #{3510, 6223}) end if IIlIIl1l1ll1iiIIIli == #{ 3791, 4097, 2453, 2771, 5209, 836, 4548, 4708, 5331, 5726, 1403, 5807, 3038, 6148, 384, 171, 4894, 3346, 5532, 3755, 3671, 2678 } + l1lii1iI1i11IlI1iIl + 103 then iil1IliiI1Ii1I11I1I = I11I1i1IlIilliIiIii() + iIlIIl11IilI1il11ii() + II11I1lili1ii1lIill() end if IIlIIl1l1ll1iiIIIli == #{ 3658, 4658, 2628, 4745, 4536, 248, 4746, 937, 1284, 6477, 5741, 36, 2080, 6750, 3058, 6641, 3399, 5901, 4922, 2516 } + l1lii1iI1i11IlI1iIl + -39 then iil1IliiI1Ii1I11I1I = II11I1lili1ii1lIill() end if IIlIIl1l1ll1iiIIIli == #{ 6270, 5770, 1063, 454, 4941, 3328, 431, 3382, 4963, 5379, 4489, 2040, 1352, 758, 2367, 6499, 1153, 6183, 4930, 5187, 2158, 107, 4894, 1823 } + l1lii1iI1i11IlI1iIl + 36 then iil1IliiI1Ii1I11I1I = I11I1i1IlIilliIiIii() end iIllllI1l1li11iI1li[3][lIlIi1I1IIlIIlllIll1l - I11llIl1i1iI1IIllII] = iil1IliiI1Ii1I11I1I end for lIlIi1I1IIlIIlllIll1l = I11llIl1i1iI1IIllII, I111ilIIliiIilli1Ii do local II111111i11iilIlIii = iIllllI1l1li11iI1li[5][lIlIi1I1IIlIIlllIll1l] local lIli1iilI11Ill1IIIIII = ll1liiII11I11iiiiII[II111111i11iilIlIii[4]] if lIli1iilI11Ill1IIIIII == #{ 6404, 1659, 349, 1998 } then II111111i11iilIlIii[2] = iIllllI1l1li11iI1li[3][II111111i11iilIlIii[7]] end if lIli1iilI11Ill1IIIIII == #{2896, 3289} and II111111i11iilIlIii[10] > 255 then II111111i11iilIlIii[5] = true II111111i11iilIlIii[6] = iIllllI1l1li11iI1li[3][II111111i11iilIlIii[10] - 256] end if lIli1iilI11Ill1IIIIII == #{ 6517, 2210, 4626 } then if II111111i11iilIlIii[1] > 255 then II111111i11iilIlIii[3] = true II111111i11iilIlIii[8] = iIllllI1l1li11iI1li[3][II111111i11iilIlIii[1] - 256] end if II111111i11iilIlIii[10] > 255 then II111111i11iilIlIii[5] = true II111111i11iilIlIii[6] = iIllllI1l1li11iI1li[3][II111111i11iilIlIii[10] - 256] end end if lIli1iilI11Ill1IIIIII == #{6268} and II111111i11iilIlIii[1] > 255 then II111111i11iilIlIii[3] = true II111111i11iilIlIii[8] = iIllllI1l1li11iI1li[3][II111111i11iilIlIii[1] - 256] end end iIlIIl11IilI1il11ii() iIlIIl11IilI1il11ii() iIllllI1l1li11iI1li[6] = I11I1i1IlIilliIiIii() local I1ll1iii1i111l11iil = iIlIIl11IilI1il11ii() for lIlIi1I1IIlIIlllIll1l = I11llIl1i1iI1IIllII, I1ll1iii1i111l11iil do iIllllI1l1li11iI1li[7][lIlIi1I1IIlIIlllIll1l - I11llIl1i1iI1IIllII] = lIl1lllii1iii1IlIi1i1() end I11I1i1IlIilliIiIii() I11I1i1IlIilliIiIii() iIlIIl11IilI1il11ii() local I1ll1iii1i111l11iil = iIlIIl11IilI1il11ii() for lIlIi1I1IIlIIlllIll1l = I11llIl1i1iI1IIllII, I1ll1iii1i111l11iil do iIllllI1l1li11iI1li[2][lIlIi1I1IIlIIlllIll1l] = iIlIIl11IilI1il11ii() end I11I1i1IlIilliIiIii() I11I1i1IlIilliIiIii() I11I1i1IlIilliIiIii() return iIllllI1l1li11iI1li end local function llI1IiiilI11lll1lI1(iIllllI1l1li11iI1li, lIlI1lIiI1IIliiii111I, lIll1iiii1IilIiiili1I) local lIlIII1lIi1liIlili1lI, II1iiilI1II1l1lilli = 14, 2 local lIli11lii1liliiliiIII = iIllllI1l1li11iI1li[5] local i1iiiililil1llI1ii1 = 1 local iliIl1lIllI1IlIIliI = iIllllI1l1li11iI1li[7] local iIIlI11i1lliliI11iI = iIllllI1l1li11iI1li[6] local l11lll1ll11I1I11iI1 = iIllllI1l1li11iI1li[4] local Il1lliiii11IIllIill = 4 local lIliiIl1i1ll1II1iiiI1 = iIllllI1l1li11iI1li[2] local l1liIiiiIll1IiII1ii = 1 local function Ili1i1i1IiIiiII1IiI(...) local IIi1lIlIl1iliI1i1lI = 0 local lliIil1il11i1llIIIi = { i1II1IilllI11lii1lI({}, 1, l11lll1ll11I1I11iI1) } local iiiilil111ll1iI1I1i = 1 local lIliIiI11iIllIliliiIi = {} local I1IiIlIlI1IIllli11I = {} local lIlI1lIiI1IIliiii111I = illIli1IIIlI1lI1lii() local Ili1i1i1II11l1I1li1 = { ... } local IIiiiIIIlll11liii1I = #Ili1i1i1II11l1I1li1 - 1 for lIlIi1I1IIlIIlllIll1l = 0, IIiiiIIIlll11liii1I do if lIlIi1I1IIlIIlllIll1l < iIIlI11i1lliliI11iI then lliIil1il11i1llIIIi[lIlIi1I1IIlIIlllIll1l] = Ili1i1i1II11l1I1li1[lIlIi1I1IIlIIlllIll1l + 1] end end local function lliIIlIlIIillIiI11i(...) local iiI1iI1il1lIiI1illi = li1iiilII1I1iIIii11("#", ...) local i1IilIlliI11Il1llII = { ... } return iiI1iI1il1lIiI1illi, i1IilIlliI11Il1llII end local function Ii1lIliI1lii1lII11I() while true do local I1lilll11iiIIiIllIi = lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] local lIllliI1III1I1I1iIlIi = I1lilll11iiIIiIllIi[4] iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i + 1 if lIllliI1III1I1I1iIlIi >= 10 then if lIllliI1III1I1I1iIlIi < 15 then if lIllliI1III1I1I1iIlIi < 12 then if lIllliI1III1I1I1iIlIi == 11 then if I1lilll11iiIIiIllIi[10] == 76 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i - 1 lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] = { [4] = 14, [9] = (I1lilll11iiIIiIllIi[9] - 67) % 256, [1] = (I1lilll11iiIIiIllIi[1] - 67) % 256 } elseif I1lilll11iiIIiIllIi[10] == 42 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i - 1 lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] = { [4] = 2, [9] = (I1lilll11iiIIiIllIi[9] - 231) % 256, [1] = (I1lilll11iiIIiIllIi[1] - 231) % 256 } else lIll1iiii1IilIiiili1I[I1lilll11iiIIiIllIi[1]] = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] end else local iIi1ilili11Il1l1liI, iiI1iI1il1lIiI1illi if I1lilll11iiIIiIllIi[3] then iIi1ilili11Il1l1liI = I1lilll11iiIIiIllIi[8] else iIi1ilili11Il1l1liI = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]] end if I1lilll11iiIIiIllIi[5] then iiI1iI1il1lIiI1illi = I1lilll11iiIIiIllIi[6] else iiI1iI1il1lIiI1illi = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[10]] end if iIi1ilili11Il1l1liI == iiI1iI1il1lIiI1illi ~= (I1lilll11iiIIiIllIi[9] ~= 0) then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i + 1 end end elseif lIllliI1III1I1I1iIlIi < 13 then local iIi1ilili11Il1l1liI, iiI1iI1il1lIiI1illi if I1lilll11iiIIiIllIi[3] then iIi1ilili11Il1l1liI = I1lilll11iiIIiIllIi[8] else iIi1ilili11Il1l1liI = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]] end if I1lilll11iiIIiIllIi[5] then iiI1iI1il1lIiI1illi = I1lilll11iiIIiIllIi[6] else iiI1iI1il1lIiI1illi = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[10]] end lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]][iIi1ilili11Il1l1liI] = iiI1iI1il1lIiI1illi elseif lIllliI1III1I1I1iIlIi ~= 14 then if not not lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] == (I1lilll11iiIIiIllIi[10] == 0) then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i + 1 end else lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]] end elseif lIllliI1III1I1I1iIlIi < 18 then if lIllliI1III1I1I1iIlIi >= 16 then if lIllliI1III1I1I1iIlIi == 17 then local iIl1IlIi1iIiiiI11i1 = I1lilll11iiIIiIllIi[9] local lllii1lliillliliIl1 = {} for iill1ilIlIlll1I1lI1, il1lilIIIlii1iII1II in pairs(lIliIiI11iIllIliliiIi[lliIil1il11i1llIIIi]) do for iill1ilIlIlll1I1lI1, lIl11llllliiIl1i1liil in pairs(il1lilIIIlii1iII1II) do if lIl11llllliiIl1i1liil[1] == lliIil1il11i1llIIIi and iIl1IlIi1iIiiiI11i1 <= lIl11llllliiIl1i1liil[2] then local lIllIIiIilIIii11lI1ll = lIl11llllliiIl1i1liil[2] if not lllii1lliillliliIl1[lIllIIiIilIIii11lI1ll] then llI1IiiilI11lll1lI1(I1IiIlIlI1IIllli11I, lliIil1il11i1llIIIi[lIllIIiIilIIii11lI1ll]) lllii1lliillliliIl1[lIllIIiIilIIii11lI1ll] = #I1IiIlIlI1IIllli11I end lIl11llllliiIl1i1liil[1] = I1IiIlIlI1IIllli11I lIl11llllliiIl1i1liil[2] = lllii1lliillliliIl1[lIllIIiIilIIii11lI1ll] end end end else local lll1liil1liIl1Illi1 = iliIl1lIllI1IlIIliI[I1lilll11iiIIiIllIi[7]] local l1Illl11il1l11IiilI = {} if lll1liil1liIl1Illi1[i1iiiililil1llI1ii1] > 0 then do local il1lilIIIlii1iII1II = {} l1Illl11il1l11IiilI = llIi1liI1Ii11iiII1i({}, { __index = function(i1IilIlliI11Il1llII, lIliI11ilI11i1l1Ii1) local lIl11llllliiIl1i1liil = il1lilIIIlii1iII1II[lIliI11ilI11i1l1Ii1] return lIl11llllliiIl1i1liil[1][lIl11llllliiIl1i1liil[2]] end, __newindex = function(i1IilIlliI11Il1llII, lIliI11ilI11i1l1Ii1, lIl1lIl1I1llill1ll1lI) local lIl11llllliiIl1i1liil = il1lilIIIlii1iII1II[lIliI11ilI11i1l1Ii1] lIl11llllliiIl1i1liil[1][lIl11llllliiIl1i1liil[2]] = lIl1lIl1I1llill1ll1lI end }) for lIlIi1I1IIlIIlllIll1l = 1, lll1liil1liIl1Illi1[i1iiiililil1llI1ii1] do local iI1iliiii1iIiI111il = lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] if iI1iliiii1iIiI111il[Il1lliiii11IIllIill] == lIlIII1lIi1liIlili1lI then il1lilIIIlii1iII1II[lIlIi1I1IIlIIlllIll1l - 1] = { lliIil1il11i1llIIIi, iI1iliiii1iIiI111il[l1liIiiiIll1IiII1ii] } elseif iI1iliiii1iIiI111il[Il1lliiii11IIllIill] == II1iiilI1II1l1lilli then il1lilIIIlii1iII1II[lIlIi1I1IIlIIlllIll1l - 1] = { lIll1iiii1IilIiiili1I, iI1iliiii1iIiI111il[l1liIiiiIll1IiII1ii] } end iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i + 1 end if not lIliIiI11iIllIliliiIi[lliIil1il11i1llIIIi] then lIliIiI11iIllIliliiIi[lliIil1il11i1llIIIi] = {il1lilIIIlii1iII1II} else iillilIiiilIIIiII1l(lIliIiI11iIllIliliiIi[lliIil1il11i1llIIIi], il1lilIIIlii1iII1II) end end end local I11li1iIiiIiI1lllIi = llI1IiiilI11lll1lI1(lll1liil1liIl1Illi1, lIlI1lIiI1IIliiii111I, l1Illl11il1l11IiilI) lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = I11li1iIiiIiI1lllIi end elseif I1lilll11iiIIiIllIi[10] == 135 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i - 1 lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] = { [4] = 11, [9] = (I1lilll11iiIIiIllIi[9] - 88) % 256, [1] = (I1lilll11iiIIiIllIi[1] - 88) % 256 } else lIliIiI11iIllIliliiIi[lliIil1il11i1llIIIi] = nil local lIlIi11Iiillii1llII = I1lilll11iiIIiIllIi[9] local iiiliIll1l111i1ilii = I1lilll11iiIIiIllIi[1] if iiiliIll1l111i1ilii == 1 then return true end local Il1IiI1i1IiiIl1Illi = lIlIi11Iiillii1llII + iiiliIll1l111i1ilii - 2 if iiiliIll1l111i1ilii == 0 then Il1IiI1i1IiiIl1Illi = IIi1lIlIl1iliI1i1lI end return true, lIlIi11Iiillii1llII, Il1IiI1i1IiiIl1Illi end elseif lIllliI1III1I1I1iIlIi >= 19 then if lIllliI1III1I1I1iIlIi == 20 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i + (I1lilll11iiIIiIllIi[7] - I1i11lIiliiI111iI1l) elseif I1lilll11iiIIiIllIi[10] == 194 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i - 1 lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] = { [4] = 13, [9] = (I1lilll11iiIIiIllIi[9] - 247) % 256, [10] = (I1lilll11iiIIiIllIi[1] - 247) % 256 } else lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = -lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]] end else lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = { i1II1IilllI11lii1lI(lIliilillilllIIIiiiil, 1, I1lilll11iiIIiIllIi[1] == 0 and 255 or I1lilll11iiIIiIllIi[1]) } end elseif lIllliI1III1I1I1iIlIi >= 5 then if lIllliI1III1I1I1iIlIi < 7 then if lIllliI1III1I1I1iIlIi == 6 then lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = I1lilll11iiIIiIllIi[1] ~= 0 if I1lilll11iiIIiIllIi[10] ~= 0 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i + 1 end else local iIiIi1l11l1IiIliiIl = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]] local iiI1iI1il1lIiI1illi if I1lilll11iiIIiIllIi[5] then iiI1iI1il1lIiI1illi = I1lilll11iiIIiIllIi[6] else iiI1iI1il1lIiI1illi = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[10]] end lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9] + 1] = iIiIi1l11l1IiIliiIl lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = iIiIi1l11l1IiIliiIl[iiI1iI1il1lIiI1illi] end elseif lIllliI1III1I1I1iIlIi >= 8 then if lIllliI1III1I1I1iIlIi == 9 then local lIlIi11Iiillii1llII = I1lilll11iiIIiIllIi[9] local Ili1i1i1II11l1I1li1 = I1lilll11iiIIiIllIi[1] local lii1illll1l1l1I111I = I1lilll11iiIIiIllIi[10] local l1ll1Illl1iiii1ilIl, Il1IiI1i1IiiIl1Illi, Ii1lIliI1lii1lII11I if Ili1i1i1II11l1I1li1 ~= 1 then if Ili1i1i1II11l1I1li1 ~= 0 then Il1IiI1i1IiiIl1Illi = lIlIi11Iiillii1llII + Ili1i1i1II11l1I1li1 - 1 else Il1IiI1i1IiiIl1Illi = IIi1lIlIl1iliI1i1lI end Il1IiI1i1IiiIl1Illi, l1ll1Illl1iiii1ilIl = lliIIlIlIIillIiI11i(lliIil1il11i1llIIIi[lIlIi11Iiillii1llII](i1II1IilllI11lii1lI(lliIil1il11i1llIIIi, lIlIi11Iiillii1llII + 1, Il1IiI1i1IiiIl1Illi))) else Il1IiI1i1IiiIl1Illi, l1ll1Illl1iiii1ilIl = lliIIlIlIIillIiI11i(lliIil1il11i1llIIIi[lIlIi11Iiillii1llII]()) end if lii1illll1l1l1I111I ~= 1 then if lii1illll1l1l1I111I ~= 0 then Il1IiI1i1IiiIl1Illi = lIlIi11Iiillii1llII + lii1illll1l1l1I111I - 2 IIi1lIlIl1iliI1i1lI = Il1IiI1i1IiiIl1Illi + 1 else Il1IiI1i1IiiIl1Illi = Il1IiI1i1IiiIl1Illi + lIlIi11Iiillii1llII - 1 IIi1lIlIl1iliI1i1lI = Il1IiI1i1IiiIl1Illi end Ii1lIliI1lii1lII11I = 0 for lIlIi1I1IIlIIlllIll1l = lIlIi11Iiillii1llII, Il1IiI1i1IiiIl1Illi do Ii1lIliI1lii1lII11I = Ii1lIliI1lii1lII11I + 1 lliIil1il11i1llIIIi[lIlIi1I1IIlIIlllIll1l] = l1ll1Illl1iiii1ilIl[Ii1lIliI1lii1lII11I] end else IIi1lIlIl1iliI1i1lI = lIlIi11Iiillii1llII - 1 end for lIlIi1I1IIlIIlllIll1l = IIi1lIlIl1iliI1i1lI + 1, l11lll1ll11I1I11iI1 do lliIil1il11i1llIIIi[lIlIi1I1IIlIIlllIll1l] = nil end else local iliiliIIliIl1Iii1Il = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]] for lIlIi1I1IIlIIlllIll1l = I1lilll11iiIIiIllIi[1] + 1, I1lilll11iiIIiIllIi[10] do iliiliIIliIl1Iii1Il = iliiliIIliIl1Iii1Il .. lliIil1il11i1llIIIi[lIlIi1I1IIlIIlllIll1l] end lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = iliiliIIliIl1Iii1Il end else local iiI1iI1il1lIiI1illi if I1lilll11iiIIiIllIi[5] then iiI1iI1il1lIiI1illi = I1lilll11iiIIiIllIi[6] else iiI1iI1il1lIiI1illi = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[10]] end lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]][iiI1iI1il1lIiI1illi] end elseif lIllliI1III1I1I1iIlIi < 2 then if lIllliI1III1I1I1iIlIi == 1 then lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = lIlI1lIiI1IIliiii111I[I1lilll11iiIIiIllIi[2]] else lIlI1lIiI1IIliiii111I[I1lilll11iiIIiIllIi[2]] = lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] end elseif lIllliI1III1I1I1iIlIi >= 3 then if lIllliI1III1I1I1iIlIi ~= 4 then if I1lilll11iiIIiIllIi[10] == 115 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i - 1 lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] = { [4] = 15, [9] = (I1lilll11iiIIiIllIi[9] - 171) % 256, [1] = (I1lilll11iiIIiIllIi[1] - 171) % 256 } else lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = #lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[1]] end else lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = I1lilll11iiIIiIllIi[2] end elseif I1lilll11iiIIiIllIi[10] == 121 then iiiilil111ll1iI1I1i = iiiilil111ll1iI1I1i - 1 lIli11lii1liliiliiIII[iiiilil111ll1iI1I1i] = { [4] = 17, [9] = (I1lilll11iiIIiIllIi[9] - 120) % 256, [1] = (I1lilll11iiIIiIllIi[1] - 120) % 256 } else lliIil1il11i1llIIIi[I1lilll11iiIIiIllIi[9]] = lIll1iiii1IilIiiili1I[I1lilll11iiIIiIllIi[1]] end end end local iillIllIIiIlIIIlI11, iiliIIIlil1Ii1Ili11, iIl1IlIi1iIiiiI11i1, Iill1iIl11iIliliIi1 = lIlii1ilil11lii1l11(Ii1lIliI1lii1lII11I) if iillIllIIiIlIIIlI11 then if iIl1IlIi1iIiiiI11i1 then return i1II1IilllI11lii1lI(lliIil1il11i1llIIIi, iIl1IlIi1iIiiiI11i1, Iill1iIl11iIliliIi1) end else lIlli1lli11IiIIilill1("Luraph Script:" .. (lIliiIl1i1ll1II1iiiI1[iiiilil111ll1iI1I1i - 1] or "") .. ": " .. iII111IilIiIIii1l1i(iiliIIIlil1Ii1Ili11), 0) end end iliIii1illII1II1l1I(Ili1i1i1IiIiiII1IiI, lIlI1lIiI1IIliiii111I) return Ili1i1i1IiIiiII1IiI end local lllii1lliillliliIl1 = lIl1lllii1iii1IlIi1i1() return llI1IiiilI11lll1lI1(lllii1lliillliliIl1, lIlI1lIiI1IIliiii111I)() end return lIlII1llliiIi1liIl1IiillIli1IIIlI1lI1lii()) 