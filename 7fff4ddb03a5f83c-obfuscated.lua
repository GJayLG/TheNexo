-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local I1III1IiIl11IiiiIIi = assert local Il1II1l1l1liiI11iII = select local Il1ii11IIiiiiliI1I1 = tonumber local l11i1l1iIlilil1ili1 = unpack local lIl1II1IliilI1I1llIIl = pcall local lIlIIIllIiliil1l1II11 = setfenv local II1IIlll11I11II1iII = setmetatable local i1liiili1Il1lillilI = type local lIllIIi11li11Ilii1lll = getfenv local iI1ii1llilIlIlIil1l = tostring local lIlll1III1lI11I1ili1i = error local IIIiIllllil1IiiIIIl = string.sub local iiI11IlliiIlil1iiIi = string.byte local il1iiIlIlI1iiiII11i = string.char local lIll1II1iIilII11Iil1l = string.rep local lllilIlIIl1Ii1lI11i = string.gsub local lI1ll1il1IiIillliii = string.match local iI11iI1Iill1IIilIil = table.insert local lIli11IiillIlIliiiili = iiI11IlliiIlil1iiIi("g", 1) local iIIli1li1liI1lIl11i, IIiiilIl1i1IliIliii = #{1969}, #{ 5417, 2096, 544, 2787, 264, 5578, 1387, 5418, 6497, 6349, 1173, 1364, 1879, 724, 5608, 1074, 1333, 4003, 6820, 2353, 1629, 636, 5335 } + lIli11IiillIlIliiiili + 130945 local lIlllIIIl1I1IllI1iIil = {} local Illillllil11lIiliiI = 1 local ll1llIiI1IliIIiIIIl, lIlIi1iIiIIllIlIll11I local function II1llIIi1l1lilIlII1(lIliilI1iI111illiil1I, lIll1I11iIliiliIIIll1) local lIll1i1llIl1l11ll1Ili lIliilI1iI111illiil1I = lllilIlIIl1Ii1lI11i(IIIiIllllil1IiiIIIl(lIliilI1iI111illiil1I, 5), "..", function(II11iIIl11I111i1ilI) if iiI11IlliiIlil1iiIi(II11iIIl11I111i1ilI, 2) == 72 then lIll1i1llIl1l11ll1Ili = Il1ii11IIiiiiliI1I1(IIIiIllllil1IiiIIIl(II11iIIl11I111i1ilI, 1, 1)) return "" else local lIlll1ii11iI1Ii1llI11 = il1iiIlIlI1iiiII11i(Il1ii11IIiiiiliI1I1(II11iIIl11I111i1ilI, 16)) if lIll1i1llIl1l11ll1Ili then local lllIliiIIliIiIllllI = lIll1II1iIilII11Iil1l(lIlll1ii11iI1Ii1llI11, lIll1i1llIl1l11ll1Ili) lIll1i1llIl1l11ll1Ili = nil return lllIliiIIliIiIllllI else return lIlll1ii11iI1Ii1llI11 end end end) local function iII1lllilIIl1liilll() local lIlli1lll1lIlII1l11ll = iiI11IlliiIlil1iiIi(lIliilI1iI111illiil1I, Illillllil11lIiliiI, Illillllil11lIiliiI) Illillllil11lIiliiI = Illillllil11lIiliiI + 1 return lIlli1lll1lIlII1l11ll end local function iIl11iIlII1I1l11Iil() local lIlli1lll1lIlII1l11ll, lIlll1ii11iI1Ii1llI11, lllIliiIIliIiIllllI, lIllii11Ililli1IiIiiI = iiI11IlliiIlil1iiIi(lIliilI1iI111illiil1I, Illillllil11lIiliiI, Illillllil11lIiliiI + 3) Illillllil11lIiliiI = Illillllil11lIiliiI + 4 return lIllii11Ililli1IiIiiI * 16777216 + lllIliiIIliIiIllllI * 65536 + lIlll1ii11iI1Ii1llI11 * 256 + lIlli1lll1lIlII1l11ll end local function IlIiliI1lIll1I1ilIi(II1Iii11iI1iii1l111, ili1llI1iiliiiIl11I, l111illI1li1IIiil11) if l111illI1li1IIiil11 then local Ili11ii1iII11Iil11l, i1IliI1ii11I11Ii1Il = 0, 0 for lIlIiIIli1I1ii1IiI1I1 = ili1llI1iiliiiIl11I, l111illI1li1IIiil11 do Ili11ii1iII11Iil11l = Ili11ii1iII11Iil11l + 2 ^ i1IliI1ii11I11Ii1Il * IlIiliI1lIll1I1ilIi(II1Iii11iI1iii1l111, lIlIiIIli1I1ii1IiI1I1) i1IliI1ii11I11Ii1Il = i1IliI1ii11I11Ii1Il + 1 end return Ili11ii1iII11Iil11l else local IiIIliIiiliIIlllIl1 = 2 ^ (ili1llI1iiliiiIl11I - 1) return IiIIliIiiliIIlllIl1 <= II1Iii11iI1iii1l111 % (IiIIliIiiliIIlllIl1 + IiIIliIiiliIIlllIl1) and 1 or 0 end end local function lIIIi1I1ll1lIII1II1() local lIlli1lll1lIlII1l11ll, lIlll1ii11iI1Ii1llI11 = iIl11iIlII1I1l11Iil(), iIl11iIlII1I1l11Iil() if lIlli1lll1lIlII1l11ll == 0 and lIlll1ii11iI1Ii1llI11 == 0 then return 0 end return (-2 * IlIiliI1lIll1I1ilIi(lIlll1ii11iI1Ii1llI11, 32) + 1) * 2 ^ (IlIiliI1lIll1I1ilIi(lIlll1ii11iI1Ii1llI11, 21, 31) - 1023) * ((IlIiliI1lIll1I1ilIi(lIlll1ii11iI1Ii1llI11, 1, 20) * 4294967296 + lIlli1lll1lIlII1l11ll) / 4503599627370496 + 1) end local IiiIi1lillliiil1lll = bit or bit32 local lIliIi1Ii1IlIIii1ili1 = IiiIi1lillliiil1lll and IiiIi1lillliiil1lll.bxor or function(lIlli1lll1lIlII1l11ll, lIlll1ii11iI1Ii1llI11) local lIlIllllI1ili111iI11l = 1 local lllIliiIIliIiIllllI = 0 while lIlli1lll1lIlII1l11ll > 0 and lIlll1ii11iI1Ii1llI11 > 0 do local ili11I1ilI1ilIIIlil = lIlli1lll1lIlII1l11ll % 2 local I111II1iiliiiI111Ii = lIlll1ii11iI1Ii1llI11 % 2 if ili11I1ilI1ilIIIlil ~= I111II1iiliiiI111Ii then lllIliiIIliIiIllllI = lllIliiIIliIiIllllI + lIlIllllI1ili111iI11l end lIlli1lll1lIlII1l11ll = (lIlli1lll1lIlII1l11ll - ili11I1ilI1ilIIIlil) / 2 lIlll1ii11iI1Ii1llI11 = (lIlll1ii11iI1Ii1llI11 - I111II1iiliiiI111Ii) / 2 lIlIllllI1ili111iI11l = lIlIllllI1ili111iI11l * 2 end if lIlli1lll1lIlII1l11ll < lIlll1ii11iI1Ii1llI11 then lIlli1lll1lIlII1l11ll = lIlll1ii11iI1Ii1llI11 end while lIlli1lll1lIlII1l11ll > 0 do local ili11I1ilI1ilIIIlil = lIlli1lll1lIlII1l11ll % 2 if ili11I1ilI1ilIIIlil > 0 then lllIliiIIliIiIllllI = lllIliiIIliIiIllllI + lIlIllllI1ili111iI11l end lIlli1lll1lIlII1l11ll = (lIlli1lll1lIlII1l11ll - ili11I1ilI1ilIIIlil) / 2 lIlIllllI1ili111iI11l = lIlIllllI1ili111iI11l * 2 end return lllIliiIIliIiIllllI end local function l1lll1llIlIlii11lII(lIlIllIIlliI1IIlIiIll) local iI11Il1IIIillIIl1lI = { iiI11IlliiIlil1iiIi(lIliilI1iI111illiil1I, Illillllil11lIiliiI, Illillllil11lIiliiI + 3) } Illillllil11lIiliiI = Illillllil11lIiliiI + 4 local lIlli1lll1lIlII1l11ll = lIliIi1Ii1IlIIii1ili1(iI11Il1IIIillIIl1lI[1], lIlIi1iIiIIllIlIll11I) local lIlll1ii11iI1Ii1llI11 = lIliIi1Ii1IlIIii1ili1(iI11Il1IIIillIIl1lI[2], lIlIi1iIiIIllIlIll11I) local lllIliiIIliIiIllllI = lIliIi1Ii1IlIIii1ili1(iI11Il1IIIillIIl1lI[3], lIlIi1iIiIIllIlIll11I) local lIllii11Ililli1IiIiiI = lIliIi1Ii1IlIIii1ili1(iI11Il1IIIillIIl1lI[4], lIlIi1iIiIIllIlIll11I) lIlIi1iIiIIllIlIll11I = (117 * lIlIi1iIiIIllIlIll11I + lIlIllIIlliI1IIlIiIll) % 256 return lIllii11Ililli1IiIiiI * 16777216 + lllIliiIIliIiIllllI * 65536 + lIlll1ii11iI1Ii1llI11 * 256 + lIlli1lll1lIlII1l11ll end local function i1lI1l1Ilili1l1III1(III1Ill1iIlllI1I11i) local llliIl1i11lli1lIll1 = iIl11iIlII1I1l11Iil() local lIlI1i1iIillil11I1llI = "" for lIlIiIIli1I1ii1IiI1I1 = iIIli1li1liI1lIl11i, llliIl1i11lli1lIll1 do lIlI1i1iIillil11I1llI = lIlI1i1iIillil11I1llI .. il1iiIlIlI1iiiII11i(lIliIi1Ii1IlIIii1ili1(iiI11IlliiIlil1iiIi(lIliilI1iI111illiil1I, Illillllil11lIiliiI + lIlIiIIli1I1ii1IiI1I1 - 1), ll1llIiI1IliIIiIIIl)) ll1llIiI1IliIIiIIIl = (III1Ill1iIlllI1I11i * ll1llIiI1IliIIiIIIl + 83) % 256 end Illillllil11lIiliiI = Illillllil11lIiliiI + llliIl1i11lli1lIll1 return lIlI1i1iIillil11I1llI end ll1llIiI1IliIIiIIIl = iII1lllilIIl1liilll() lIlIi1iIiIIllIlIll11I = iII1lllilIIl1liilll() local IIlIi1I1iii1lIlliII = {} for lIlIiIIli1I1ii1IiI1I1 = iIIli1li1liI1lIl11i, iII1lllilIIl1liilll() do local l11lIIiiilIiiiliI1l = iII1lllilIIl1liilll() local liIIIi1111i1I1lIl1I = (lIlIiIIli1I1ii1IiI1I1 - 1) * 2 IIlIi1I1iii1lIlliII[liIIIi1111i1I1lIl1I] = IlIiliI1lIll1I1ilIi(l11lIIiiilIiiiliI1l, 1, 4) IIlIi1I1iii1lIlliII[liIIIi1111i1I1lIl1I + 1] = IlIiliI1lIll1I1ilIi(l11lIIiiilIiiiliI1l, 5, 8) end local function i1illilIl1llI1iI1Ii() local liIlilI1lI1l1IiI1ll = { nil, nil, {}, {}, nil, {}, {} } iII1lllilIIl1liilll() local Il1iii11II1ili1I1li = iIl11iIlII1I1l11Iil() - (#{ 4406, 1748, 539, 4001, 2848, 1724, 3522, 6007, 1912, 4781, 552, 5238, 5915, 6302, 3534, 1154, 6534, 1148, 4874, 3356 } + lIli11IiillIlIliiiili + 133649) local i1li1ll1li11lIi1iiI = iII1lllilIIl1liilll() for lIlIiIIli1I1ii1IiI1I1 = iIIli1li1liI1lIl11i, Il1iii11II1ili1I1li do local lI11lilllIlIliIIII1 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local l11lIIiiilIiiiliI1l = l1lll1llIlIlii11lII(i1li1ll1li11lIi1iiI) lI11lilllIlIliIIII1[4] = IlIiliI1lIll1I1ilIi(l11lIIiiilIiiiliI1l, #{5816}, #{ 6682, 3726, 4368, 3365, 1225, 4337, 1086, 1995, 4463 }) lI11lilllIlIliIIII1[10] = IlIiliI1lIll1I1ilIi(l11lIIiiilIiiiliI1l, #{5763}, #{ 4994, 609, 2663, 4969, 3951, 6911, 5873, 6823, 5371, 6312, 5747, 5163, 2020, 5111, 6801, 3865, 482, 3234 }) lI11lilllIlIliIIII1[3] = IlIiliI1lIll1I1ilIi(l11lIIiiilIiiiliI1l, #{ 6789, 4916, 4020, 1790, 4004, 4806, 6598, 6772, 6038, 800, 3985, 6354, 2960, 3792, 1580, 1596, 2709, 1596, 3755 }, #{ 1109, 5928, 4800, 6403, 837, 1498, 2141, 6921, 1926, 5694, 4792, 2807, 4012, 2334, 2140, 1816, 6176, 38, 245, 6214, 585 } + lIli11IiillIlIliiiili + -98) lI11lilllIlIliIIII1[7] = IlIiliI1lIll1I1ilIi(l11lIIiiilIiiiliI1l, #{ 5761, 240, 4703, 6159, 5891, 2999, 6, 1110, 1502, 2523, 6885, 1635, 737, 2811, 2710, 5312, 4740, 2764, 1650, 3187, 2853, 6397, 3806, 4014 } + lIli11IiillIlIliiiili + -100, #{ 3518, 798, 5727, 1515, 6563, 3471, 5960, 5345, 5356, 3675, 717, 4442, 2218, 6109, 4275, 3541, 4335, 6723, 5528, 1583, 3662, 6214, 600 } + lIli11IiillIlIliiiili + -94) lI11lilllIlIliIIII1[6] = IlIiliI1lIll1I1ilIi(l11lIIiiilIiiiliI1l, #{ 2633, 1839, 3900, 1593, 5081, 6770, 2859, 5326, 6748, 2691 }, #{ 1492, 5740, 3223, 1349, 295, 4667, 996, 749, 5321, 5804, 6551, 3058, 6274, 3100, 4672, 5266, 735, 2620 }) liIlilI1lI1l1IiI1ll[6][lIlIiIIli1I1ii1IiI1I1] = lI11lilllIlIliIIII1 end local IIIiiIiIll11l1I11li = iIl11iIlII1I1l11Iil() for lIlIiIIli1I1ii1IiI1I1 = iIIli1li1liI1lIl11i, IIIiiIiIll11l1I11li do liIlilI1lI1l1IiI1ll[7][lIlIiIIli1I1ii1IiI1I1 - iIIli1li1liI1lIl11i] = i1illilIl1llI1iI1Ii() end liIlilI1lI1l1IiI1ll[1] = iII1lllilIIl1liilll() local IIIiiIiIll11l1I11li = iIl11iIlII1I1l11Iil() - (#{ 2105, 379, 4673, 4371, 611, 6835, 1700, 620, 3223, 3763, 5799, 1271, 6231, 5347, 4712, 6730, 1071, 4469, 614, 2901, 4771 } + lIli11IiillIlIliiiili + 133602) local liiIl1I11iIlIIlIll1 = iII1lllilIIl1liilll() for lIlIiIIli1I1ii1IiI1I1 = iIIli1li1liI1lIl11i, IIIiiIiIll11l1I11li do local iI11i1iill1l1IilII1 local i1liiili1Il1lillilI = iII1lllilIIl1liilll() if i1liiili1Il1lillilI == #{ 5294, 6128, 5051, 2601, 3841, 2106, 2573, 4183, 495, 277, 1431, 5975, 1398, 653, 697, 6038, 158, 4744, 2536, 531, 5735, 1711 } + lIli11IiillIlIliiiili + -72 then iI11i1iill1l1IilII1 = #{ 5088, 2762, 1641, 3208, 6066, 1230, 3157, 1348, 814, 3242, 2530, 6718, 4565, 2619, 774, 369, 1391, 432, 5642, 3686, 5266 } + lIli11IiillIlIliiiili + 36045 == #{ 5088, 2762, 1641, 3208, 6066, 1230, 3157, 1348, 814, 3242, 2530, 6718, 4565, 2619, 774, 369, 1391, 432, 5642, 3686, 5266 } + lIli11IiillIlIliiiili + 36045 end if i1liiili1Il1lillilI == #{ 6533, 2420, 2755, 4389, 6058, 4457, 1209, 1232, 172, 1114, 3549, 4952, 3201, 5992, 4431, 1400, 4253, 1077, 6252, 1768, 612 } + lIli11IiillIlIliiiili + -74 then iI11i1iill1l1IilII1 = lIIIi1I1ll1lIII1II1() end if i1liiili1Il1lillilI == #{ 6869, 1189, 5377, 2522, 1904, 3420, 3969, 304, 711, 1283, 2847, 4499, 1018, 3617, 5147, 6454, 3048, 3297, 4646, 6210, 6498, 977, 2907 } + lIli11IiillIlIliiiili + -34 then iI11i1iill1l1IilII1 = iII1lllilIIl1liilll() end if i1liiili1Il1lillilI == #{} then iI11i1iill1l1IilII1 = IIIiIllllil1IiiIIIl(i1lI1l1Ilili1l1III1(liiIl1I11iIlIIlIll1), #{ 4538, 2484, 4025 }) end if i1liiili1Il1lillilI == #{ 6754, 5368, 3081, 6892, 787, 2863, 1488, 6009, 44, 98, 3124, 1026, 6929, 5112, 1817, 918, 126, 3516, 1558, 914, 6730, 39, 2427 } + lIli11IiillIlIliiiili + 70 then iI11i1iill1l1IilII1 = #{ 5765, 1491, 6813, 804, 5178, 771, 4605, 302, 2224, 4333, 6923, 6616, 2245, 4229, 2458, 188, 6110, 4494, 5260, 2717 } + lIli11IiillIlIliiiili + 9186 == #{ 4491, 584, 3485, 5581, 976, 4958, 6200, 972, 564, 4122, 6867, 251, 2627, 1512, 1313, 68, 4851, 6290, 1234, 6123, 2691 } + lIli11IiillIlIliiiili + 41818 end if i1liiili1Il1lillilI == #{ 3383, 4849, 2011, 871, 6027, 2074, 1547, 1181 } then iI11i1iill1l1IilII1 = IIIiIllllil1IiiIIIl(i1lI1l1Ilili1l1III1(insEncKey), #{3464, 3595}) end if i1liiili1Il1lillilI == #{ 3009, 1705, 3228, 4882, 3912, 1340, 4856, 4374, 2797, 5832, 6220, 6751, 2020, 5687, 6235, 3256, 2144, 6829, 5208, 5673, 5977, 2288 } + lIli11IiillIlIliiiili + 91 then iI11i1iill1l1IilII1 = IIIiIllllil1IiiIIIl(i1lI1l1Ilili1l1III1(liiIl1I11iIlIIlIll1), #{ 4538, 2484, 4025 }) end if i1liiili1Il1lillilI == #{ 6013, 5792, 3301, 1972, 2640, 2477, 2996, 3668, 5418, 5842, 6080, 6589, 6054, 1419, 177, 1568, 1875, 455, 184, 6197, 1184, 1848, 6927, 5010 } + lIli11IiillIlIliiiili + -98 then iI11i1iill1l1IilII1 = IIIiIllllil1IiiIIIl(i1lI1l1Ilili1l1III1(#{ 6290, 6854, 2312, 6910, 579, 3173, 857, 1826, 3043, 2333, 3940, 3826, 2792, 2586, 6078, 1, 5826, 844, 5446, 466, 5117 } + lIli11IiillIlIliiiili + -4), #{5802, 3766}) end if i1liiili1Il1lillilI == #{ 2650, 3155, 4, 4517, 3524, 142, 5792, 3517, 1654, 1920, 3850, 2076, 677, 6017, 2025, 3631, 5162, 1410, 5711, 6903, 6913, 1438 } + lIli11IiillIlIliiiili + -87 then iI11i1iill1l1IilII1 = IIIiIllllil1IiiIIIl(i1lI1l1Ilili1l1III1(liiIl1I11iIlIIlIll1), #{ 5189, 2826, 4016, 1107 }) end liIlilI1lI1l1IiI1ll[3][lIlIiIIli1I1ii1IiI1I1 - iIIli1li1liI1lIl11i] = iI11i1iill1l1IilII1 end for lIlIiIIli1I1ii1IiI1I1 = iIIli1li1liI1lIl11i, Il1iii11II1ili1I1li do local lI11lilllIlIliIIII1 = liIlilI1lI1l1IiI1ll[6][lIlIiIIli1I1ii1IiI1I1] local lIllI1iIl11lI1iI1l111 = IIlIi1I1iii1lIlliII[lI11lilllIlIliIIII1[7]] if lIllI1iIl11lI1iI1l111 == #{ 950, 2406, 747, 6922 } then lI11lilllIlIliIIII1[2] = liIlilI1lI1l1IiI1ll[3][lI11lilllIlIliIIII1[10]] end if lIllI1iIl11lI1iI1l111 == #{6301} and lI11lilllIlIliIIII1[4] > 255 then lI11lilllIlIliIIII1[9] = true lI11lilllIlIliIIII1[8] = liIlilI1lI1l1IiI1ll[3][lI11lilllIlIliIIII1[4] - 256] end if lIllI1iIl11lI1iI1l111 == #{1150, 761} and lI11lilllIlIliIIII1[6] > 255 then lI11lilllIlIliIIII1[1] = true lI11lilllIlIliIIII1[5] = liIlilI1lI1l1IiI1ll[3][lI11lilllIlIliIIII1[6] - 256] end if lIllI1iIl11lI1iI1l111 == #{ 4044, 4071, 5792 } then if lI11lilllIlIliIIII1[4] > 255 then lI11lilllIlIliIIII1[9] = true lI11lilllIlIliIIII1[8] = liIlilI1lI1l1IiI1ll[3][lI11lilllIlIliIIII1[4] - 256] end if lI11lilllIlIliIIII1[6] > 255 then lI11lilllIlIliIIII1[1] = true lI11lilllIlIliIIII1[5] = liIlilI1lI1l1IiI1ll[3][lI11lilllIlIliIIII1[6] - 256] end end end liIlilI1lI1l1IiI1ll[2] = iII1lllilIIl1liilll() iIl11iIlII1I1l11Iil() iIl11iIlII1I1l11Iil() iIl11iIlII1I1l11Iil() iII1lllilIIl1liilll() iII1lllilIIl1liilll() local IIIiiIiIll11l1I11li = iIl11iIlII1I1l11Iil() for lIlIiIIli1I1ii1IiI1I1 = iIIli1li1liI1lIl11i, IIIiiIiIll11l1I11li do liIlilI1lI1l1IiI1ll[4][lIlIiIIli1I1ii1IiI1I1] = iIl11iIlII1I1l11Iil() end iIl11iIlII1I1l11Iil() iII1lllilIIl1liilll() liIlilI1lI1l1IiI1ll[5] = iII1lllilIIl1liilll() return liIlilI1lI1l1IiI1ll end local function Iiliii1IIlIiIIi1lll(liIlilI1lI1l1IiI1ll, lIll1I11iIliiliIIIll1, lIiiil1lI1Illil1ili) local Iil1lliIIilll1IIil1, i1ilI1liliIiiIIlIil = 8, 2 local lIll1i1ililIl1liI1il1 = liIlilI1lI1l1IiI1ll[6] local ili11111iliIi1lIilI = 2 local lIiiIliili1iI1i1iiI = liIlilI1lI1l1IiI1ll[7] local Iliil1IlI11iiIili1i = liIlilI1lI1l1IiI1ll[1] local Iii1IIll1lI1iIi1I11 = liIlilI1lI1l1IiI1ll[5] local li1IIiiIliII1iIiii1 = 7 local iiliIilii11illiI1il = liIlilI1lI1l1IiI1ll[4] local lIl11lIIIIlIiIl11lil1 = 4 local function iIliiIi1IiiIiil1I11(...) local lIlIlll11IIll1iIIIiIi = 0 local IIIilillI1li1illiIl = { l11i1l1iIlilil1ili1({}, 1, Iii1IIll1lI1iIi1I11) } local lIlIl111iilIiIiIlI111 = 1 local I1IiIlIllII1iIlllll = {} local lIlii1iiIlI1I1Iliil11 = {} local lIll1I11iIliiliIIIll1 = lIllIIi11li11Ilii1lll() local Il11i1ll11iIi1lIIII = { ... } local lIl1IiI1i1iIliiIli1lI = #Il11i1ll11iIi1lIIII - 1 for lIlIiIIli1I1ii1IiI1I1 = 0, lIl1IiI1i1iIliiIli1lI do if lIlIiIIli1I1ii1IiI1I1 < Iliil1IlI11iiIili1i then IIIilillI1li1illiIl[lIlIiIIli1I1ii1IiI1I1] = Il11i1ll11iIi1lIIII[lIlIiIIli1I1ii1IiI1I1 + 1] end end local function iiiIIIiIlIl11IIil11(...) local lllIliiIIliIiIllllI = Il1II1l1l1liiI11iII("#", ...) local llliI1IIlIlIll1iIii = { ... } return lllIliiIIliIiIllllI, llliI1IIlIlIll1iIii end local function illlililiiiIll1l1Ii() while true do local I1llll11l1lilI1Ii1l = lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] local l11l1lilIIiIlI111ll = I1llll11l1lilI1Ii1l[7] lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 if l11l1lilIIiIlI111ll >= 12 then if l11l1lilIIiIlI111ll < 18 then if l11l1lilIIiIlI111ll >= 15 then if l11l1lilIIiIlI111ll < 16 then IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = { l11i1l1iIlilil1ili1(lIlllIIIl1I1IllI1iIil, 1, I1llll11l1lilI1Ii1l[4] == 0 and 255 or I1llll11l1lilI1Ii1l[4]) } elseif l11l1lilIIiIlI111ll == 17 then if not not IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] == (I1llll11l1lilI1Ii1l[6] == 0) then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 end elseif I1llll11l1lilI1Ii1l[6] == 227 then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 - 1 lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] = { [7] = 8, [3] = (I1llll11l1lilI1Ii1l[3] - 108) % 256, [4] = (I1llll11l1lilI1Ii1l[4] - 108) % 256 } elseif I1llll11l1lilI1Ii1l[6] == 84 then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 - 1 lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] = { [7] = 3, [3] = (I1llll11l1lilI1Ii1l[3] - 77) % 256, [6] = (I1llll11l1lilI1Ii1l[4] - 77) % 256 } else IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = #IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] end elseif l11l1lilIIiIlI111ll < 13 then local i1IiliiI111I1Il1Il1 = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] local lllIliiIIliIiIllllI if I1llll11l1lilI1Ii1l[1] then lllIliiIIliIiIllllI = I1llll11l1lilI1Ii1l[5] else lllIliiIIliIiIllllI = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[6]] end IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3] + 1] = i1IiliiI111I1Il1Il1 IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = i1IiliiI111I1Il1Il1[lllIliiIIliIiIllllI] elseif l11l1lilIIiIlI111ll == 14 then local lIlll1ii11iI1Ii1llI11, lllIliiIIliIiIllllI if I1llll11l1lilI1Ii1l[9] then lIlll1ii11iI1Ii1llI11 = I1llll11l1lilI1Ii1l[8] else lIlll1ii11iI1Ii1llI11 = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] end if I1llll11l1lilI1Ii1l[1] then lllIliiIIliIiIllllI = I1llll11l1lilI1Ii1l[5] else lllIliiIIliIiIllllI = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[6]] end IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = lIlll1ii11iI1Ii1llI11 + lllIliiIIliIiIllllI else IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = lIll1I11iIliiliIIIll1[I1llll11l1lilI1Ii1l[2]] end elseif l11l1lilIIiIlI111ll >= 21 then if l11l1lilIIiIlI111ll >= 23 then if l11l1lilIIiIlI111ll == 24 then IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = I1llll11l1lilI1Ii1l[4] ~= 0 if I1llll11l1lilI1Ii1l[6] ~= 0 then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 end else local lIlll1ii11iI1Ii1llI11, lllIliiIIliIiIllllI if I1llll11l1lilI1Ii1l[9] then lIlll1ii11iI1Ii1llI11 = I1llll11l1lilI1Ii1l[8] else lIlll1ii11iI1Ii1llI11 = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] end if I1llll11l1lilI1Ii1l[1] then lllIliiIIliIiIllllI = I1llll11l1lilI1Ii1l[5] else lllIliiIIliIiIllllI = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[6]] end IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]][lIlll1ii11iI1Ii1llI11] = lllIliiIIliIiIllllI end elseif l11l1lilIIiIlI111ll == 22 then IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = I1llll11l1lilI1Ii1l[2] else local iillllI1IIl1iliIIll = I1llll11l1lilI1Ii1l[3] local Il11i1ll11iIi1lIIII = I1llll11l1lilI1Ii1l[4] local l1illlI1I1IIi1I1lil = I1llll11l1lilI1Ii1l[6] local i11l1Iilil111lIIIll, i11Ili1I11111llIIil, illlililiiiIll1l1Ii if Il11i1ll11iIi1lIIII ~= 1 then if Il11i1ll11iIi1lIIII ~= 0 then i11Ili1I11111llIIil = iillllI1IIl1iliIIll + Il11i1ll11iIi1lIIII - 1 else i11Ili1I11111llIIil = lIlIlll11IIll1iIIIiIi end i11Ili1I11111llIIil, i11l1Iilil111lIIIll = iiiIIIiIlIl11IIil11(IIIilillI1li1illiIl[iillllI1IIl1iliIIll](l11i1l1iIlilil1ili1(IIIilillI1li1illiIl, iillllI1IIl1iliIIll + 1, i11Ili1I11111llIIil))) else i11Ili1I11111llIIil, i11l1Iilil111lIIIll = iiiIIIiIlIl11IIil11(IIIilillI1li1illiIl[iillllI1IIl1iliIIll]()) end if l1illlI1I1IIi1I1lil ~= 1 then if l1illlI1I1IIi1I1lil ~= 0 then i11Ili1I11111llIIil = iillllI1IIl1iliIIll + l1illlI1I1IIi1I1lil - 2 lIlIlll11IIll1iIIIiIi = i11Ili1I11111llIIil + 1 else i11Ili1I11111llIIil = i11Ili1I11111llIIil + iillllI1IIl1iliIIll - 1 lIlIlll11IIll1iIIIiIi = i11Ili1I11111llIIil end illlililiiiIll1l1Ii = 0 for lIlIiIIli1I1ii1IiI1I1 = iillllI1IIl1iliIIll, i11Ili1I11111llIIil do illlililiiiIll1l1Ii = illlililiiiIll1l1Ii + 1 IIIilillI1li1illiIl[lIlIiIIli1I1ii1IiI1I1] = i11l1Iilil111lIIIll[illlililiiiIll1l1Ii] end else lIlIlll11IIll1iIIIiIi = iillllI1IIl1iliIIll - 1 end for lIlIiIIli1I1ii1IiI1I1 = lIlIlll11IIll1iIIIiIi + 1, Iii1IIll1lI1iIi1I11 do IIIilillI1li1illiIl[lIlIiIIli1I1ii1IiI1I1] = nil end end elseif l11l1lilIIiIlI111ll < 19 then if I1llll11l1lilI1Ii1l[6] == 28 then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 - 1 lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] = { [7] = 17, [3] = (I1llll11l1lilI1Ii1l[3] - 183) % 256, [6] = (I1llll11l1lilI1Ii1l[4] - 183) % 256 } elseif I1llll11l1lilI1Ii1l[6] == 173 then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 - 1 lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] = { [7] = 20, [3] = (I1llll11l1lilI1Ii1l[3] - 82) % 256, [4] = (I1llll11l1lilI1Ii1l[4] - 82) % 256 } else local iillllI1IIl1iliIIll = I1llll11l1lilI1Ii1l[3] local IIIiiIiIll11l1I11li = I1llll11l1lilI1Ii1l[4] local ii1ll1iliIIIllii1il = IIIiiIiIll11l1I11li > 0 and IIIiiIiIll11l1I11li - 1 or lIl1IiI1i1iIliiIli1lI - Iliil1IlI11iiIili1i if ii1ll1iliIIIllii1il < 0 then ii1ll1iliIIIllii1il = -1 end for lIlIiIIli1I1ii1IiI1I1 = iillllI1IIl1iliIIll, iillllI1IIl1iliIIll + ii1ll1iliIIIllii1il do IIIilillI1li1illiIl[lIlIiIIli1I1ii1IiI1I1] = Il11i1ll11iIi1lIIII[Iliil1IlI11iiIili1i + (lIlIiIIli1I1ii1IiI1I1 - iillllI1IIl1iliIIll) + 1] end if IIIiiIiIll11l1I11li == 0 then lIlIlll11IIll1iIIIiIi = iillllI1IIl1iliIIll + ii1ll1iliIIIllii1il for lIlIiIIli1I1ii1IiI1I1 = lIlIlll11IIll1iIIIiIi + 1, Iii1IIll1lI1iIi1I11 do IIIilillI1li1illiIl[lIlIiIIli1I1ii1IiI1I1] = nil end end end elseif l11l1lilIIiIlI111ll == 20 then I1IiIlIllII1iIlllll[IIIilillI1li1illiIl] = nil local iillllI1IIl1iliIIll = I1llll11l1lilI1Ii1l[3] local l11I11lIIilliil1lli = I1llll11l1lilI1Ii1l[4] if l11I11lIIilliil1lli == 1 then return true end local i11Ili1I11111llIIil = iillllI1IIl1iliIIll + l11I11lIIilliil1lli - 2 if l11I11lIIilliil1lli == 0 then i11Ili1I11111llIIil = lIlIlll11IIll1iIIIiIi end return true, iillllI1IIl1iliIIll, i11Ili1I11111llIIil else lIiiil1lI1Illil1ili[I1llll11l1lilI1Ii1l[4]] = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] end elseif l11l1lilIIiIlI111ll >= 6 then if l11l1lilIIiIlI111ll >= 9 then if l11l1lilIIiIlI111ll >= 10 then if l11l1lilIIiIlI111ll ~= 11 then local lllIliiIIliIiIllllI if I1llll11l1lilI1Ii1l[1] then lllIliiIIliIiIllllI = I1llll11l1lilI1Ii1l[5] else lllIliiIIliIiIllllI = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[6]] end IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]][lllIliiIIliIiIllllI] else local lIlll1ii11iI1Ii1llI11, lllIliiIIliIiIllllI if I1llll11l1lilI1Ii1l[9] then lIlll1ii11iI1Ii1llI11 = I1llll11l1lilI1Ii1l[8] else lIlll1ii11iI1Ii1llI11 = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] end if I1llll11l1lilI1Ii1l[1] then lllIliiIIliIiIllllI = I1llll11l1lilI1Ii1l[5] else lllIliiIIliIiIllllI = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[6]] end if lIlll1ii11iI1Ii1llI11 == lllIliiIIliIiIllllI ~= (I1llll11l1lilI1Ii1l[3] ~= 0) then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 end end else local lIlll1ii11iI1Ii1llI11, lllIliiIIliIiIllllI if I1llll11l1lilI1Ii1l[9] then lIlll1ii11iI1Ii1llI11 = I1llll11l1lilI1Ii1l[8] else lIlll1ii11iI1Ii1llI11 = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] end if I1llll11l1lilI1Ii1l[1] then lllIliiIIliIiIllllI = I1llll11l1lilI1Ii1l[5] else lllIliiIIliIiIllllI = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[6]] end if lIlll1ii11iI1Ii1llI11 <= lllIliiIIliIiIllllI ~= (I1llll11l1lilI1Ii1l[3] ~= 0) then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 end end elseif l11l1lilIIiIlI111ll < 7 then local liIIIi1111i1I1lIl1I = (I1llll11l1lilI1Ii1l[6] - 1) * 50 local i1lilI1lil1ii1i1lil = I1llll11l1lilI1Ii1l[4] if i1lilI1lil1ii1i1lil == 0 then i1lilI1lil1ii1i1lil = lIlIlll11IIll1iIIIiIi - I1llll11l1lilI1Ii1l[3] end for lIlIiIIli1I1ii1IiI1I1 = 1, i1lilI1lil1ii1i1lil do IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]][liIIIi1111i1I1lIl1I + lIlIiIIli1I1ii1IiI1I1] = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3] + lIlIiIIli1I1ii1IiI1I1] end elseif l11l1lilIIiIlI111ll ~= 8 then lIll1I11iIliiliIIIll1[I1llll11l1lilI1Ii1l[2]] = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] else IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] end elseif l11l1lilIIiIlI111ll < 3 then if l11l1lilIIiIlI111ll < 1 then local lIl1lIiiIl1iiliiilIl1 = lIiiIliili1iI1i1iiI[I1llll11l1lilI1Ii1l[10]] local llIlIi1IiilIi1I1ii1 = {} if lIl1lIiiIl1iiliiilIl1[ili11111iliIi1lIilI] > 0 then do local lIl1II1lII1i1IIlIIi1i = {} llIlIi1IiilIi1I1ii1 = II1IIlll11I11II1iII({}, { __index = function(llliI1IIlIlIll1iIii, lIl111Il111iIiliiilI1) local i1iiI11ll1llI11l1il = lIl1II1lII1i1IIlIIi1i[lIl111Il111iIiliiilI1] return i1iiI11ll1llI11l1il[1][i1iiI11ll1llI11l1il[2]] end, __newindex = function(llliI1IIlIlIll1iIii, lIl111Il111iIiliiilI1, lIiIil1lIliI1iIIi1l) local i1iiI11ll1llI11l1il = lIl1II1lII1i1IIlIIi1i[lIl111Il111iIiliiilI1] i1iiI11ll1llI11l1il[1][i1iiI11ll1llI11l1il[2]] = lIiIil1lIliI1iIIi1l end }) for lIlIiIIli1I1ii1IiI1I1 = 1, lIl1lIiiIl1iiliiilIl1[ili11111iliIi1lIilI] do local I1liIIliIIilIIiiiIi = lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] if I1liIIliIIilIIiiiIi[li1IIiiIliII1iIiii1] == Iil1lliIIilll1IIil1 then lIl1II1lII1i1IIlIIi1i[lIlIiIIli1I1ii1IiI1I1 - 1] = { IIIilillI1li1illiIl, I1liIIliIIilIIiiiIi[lIl11lIIIIlIiIl11lil1] } elseif I1liIIliIIilIIiiiIi[li1IIiiIliII1iIiii1] == i1ilI1liliIiiIIlIil then lIl1II1lII1i1IIlIIi1i[lIlIiIIli1I1ii1IiI1I1 - 1] = { lIiiil1lI1Illil1ili, I1liIIliIIilIIiiiIi[lIl11lIIIIlIiIl11lil1] } end lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 end if not I1IiIlIllII1iIlllll[IIIilillI1li1illiIl] then I1IiIlIllII1iIlllll[IIIilillI1li1illiIl] = {lIl1II1lII1i1IIlIIi1i} else iI11iI1Iill1IIilIil(I1IiIlIllII1iIlllll[IIIilillI1li1illiIl], lIl1II1lII1i1IIlIIi1i) end end end local ii1iI111lI11lill1Ii = Iiliii1IIlIiIIi1lll(lIl1lIiiIl1iiliiilIl1, lIll1I11iIliiliIIIll1, llIlIi1IiilIi1I1ii1) IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = ii1iI111lI11lill1Ii elseif l11l1lilIIiIlI111ll ~= 2 then if I1llll11l1lilI1Ii1l[6] == 219 then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 - 1 lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] = { [7] = 2, [3] = (I1llll11l1lilI1Ii1l[3] - 96) % 256, [4] = (I1llll11l1lilI1Ii1l[4] - 96) % 256 } else for lIlIiIIli1I1ii1IiI1I1 = I1llll11l1lilI1Ii1l[3], I1llll11l1lilI1Ii1l[4] do IIIilillI1li1illiIl[lIlIiIIli1I1ii1IiI1I1] = nil end end elseif I1llll11l1lilI1Ii1l[6] == 115 then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 - 1 lIll1i1ililIl1liI1il1[lIlIl111iilIiIiIlI111] = { [7] = 19, [3] = (I1llll11l1lilI1Ii1l[3] - 118) % 256, [4] = (I1llll11l1lilI1Ii1l[4] - 118) % 256 } else IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[3]] = lIiiil1lI1Illil1ili[I1llll11l1lilI1Ii1l[4]] end elseif l11l1lilIIiIlI111ll >= 4 then if l11l1lilIIiIlI111ll ~= 5 then local lIlll1ii11iI1Ii1llI11, lllIliiIIliIiIllllI if I1llll11l1lilI1Ii1l[9] then lIlll1ii11iI1Ii1llI11 = I1llll11l1lilI1Ii1l[8] else lIlll1ii11iI1Ii1llI11 = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[4]] end if I1llll11l1lilI1Ii1l[1] then lllIliiIIliIiIllllI = I1llll11l1lilI1Ii1l[5] else lllIliiIIliIiIllllI = IIIilillI1li1illiIl[I1llll11l1lilI1Ii1l[6]] end if lIlll1ii11iI1Ii1llI11 < lllIliiIIliIiIllllI ~= (I1llll11l1lilI1Ii1l[3] ~= 0) then lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 end else lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + (I1llll11l1lilI1Ii1l[10] - IIiiilIl1i1IliIliii) end else local iillllI1IIl1iliIIll = I1llll11l1lilI1Ii1l[3] local liIIIi1111i1I1lIl1I = iillllI1IIl1iliIIll + 2 local i1lil11I1iI1Il1i1ii = { IIIilillI1li1illiIl[iillllI1IIl1iliIIll](IIIilillI1li1illiIl[iillllI1IIl1iliIIll + 1], IIIilillI1li1illiIl[iillllI1IIl1iliIIll + 2]) } for lIlIiIIli1I1ii1IiI1I1 = 1, I1llll11l1lilI1Ii1l[6] do IIIilillI1li1illiIl[liIIIi1111i1I1lIl1I + lIlIiIIli1I1ii1IiI1I1] = i1lil11I1iI1Il1i1ii[lIlIiIIli1I1ii1IiI1I1] end if IIIilillI1li1illiIl[iillllI1IIl1iliIIll + 3] ~= nil then IIIilillI1li1illiIl[iillllI1IIl1iliIIll + 2] = IIIilillI1li1illiIl[iillllI1IIl1iliIIll + 3] else lIlIl111iilIiIiIlI111 = lIlIl111iilIiIiIlI111 + 1 end end end end local llliIIliliiliil11ii, lIlI1i1iIillil11I1llI, lIlIilIIl1iI11llillii, iIii1111l1Ii1IlIlIi = lIl1II1IliilI1I1llIIl(illlililiiiIll1l1Ii) if llliIIliliiliil11ii then if lIlIilIIl1iI11llillii then return l11i1l1iIlilil1ili1(IIIilillI1li1illiIl, lIlIilIIl1iI11llillii, iIii1111l1Ii1IlIlIi) end else lIlll1III1lI11I1ili1i("Luraph Script:" .. (iiliIilii11illiI1il[lIlIl111iilIiIiIlI111 - 1] or "") .. ": " .. iI1ii1llilIlIlIil1l(lIlI1i1iIillil11I1llI), 0) end end lIlIIIllIiliil1l1II11(iIliiIi1IiiIiil1I11, lIll1I11iIliiliIIIll1) return iIliiIi1IiiIiil1I11 end local Iiil11IIil1iI1lliIl = i1illilIl1llI1iI1Ii() return Iiliii1IIlIiIIi1lll(Iiil11IIil1iI1lliIl, lIll1I11iIliiliIIIll1)() end return II1llIIi1l1lilIlII1("LPH!A1130D2H000340303242033H003400FB930A0200A72H131107573H564HF53HA0BC3HC7F39B2H9ACE3H0959013H0072540B0200233HC4F0B6B7B383C7C2C0F6A2A1ADF9BBB8BCEC3B3F3B6F1B1E1A4E050D032D6D6C640C7D2H7B2B2F2H24062F29251DE32HEEC880938DAB2H000A560C1F073D1E14044C44434F13978498A6BAB1A5E90B0C045CCA2HD9FBE6EAF2B216110541BDAEAA8C020F1357FDFAEAAA3B2523093F30106810170B47D0CECCE20D1D394567607830D12HF5E774664E3ED2C1ED995C5A780C5D2H796BA8BA92E23125097D080E2C58992HBDAFDCCEE6965C4965118482A0D4A42H8193B0A28AFA3B2D0175B0B694E0602H455724361E6EC6D1FD89ACAA88FCEC2HC9DB988AA2D22D35196D585E7C082C330D1F879EB6C65A5D790DD3CCF6E029331F6B717656263921170D0804345CF4F3DFA3031A2836FAE1D5B9FBFCD4AC7E67494B465A620246417511A9B09A9CA2BF83E76D6A5A3A6C7553593E206078C0C7FB972H427E222H4D0D2D2H5410342H87CFE72HD69AB6F0F1A1C55C761A601F4B59232B2A7E1E40170365DEFCA0A44C4B2H1B2B78680E5D79252173742H244719097BAA2A26595F5D5F49B0E8FE8C01594D27A4A2FEF217475F31B098FCC0989FC7CFECBC98CA4C650D3D4F482C18DEDFBBEB1730682690C9EFA1D98AAAE8F9B389CB2HE28E822H6D1D0DFCD682C48DA7DBFF5D76F62E2H119511F42HE8C8312H2B0BCFC8BE9E7C570345B69CE0C4436FEF37DFDE5ADE9C9BEDCD193266205E730F2B9CB232EA7F7DF97D4446CC783F37BB0B7646D61E1021B5790A38A06088BB27E3AE9A3AC2B08521DDDAEC44B4C8FF53A7A6AC22B686EE21F5666214340B217533A882FEDAB58D0DD597941094C82HC7E71314624239134701A288F4D0724BCB136E6AEE6A852H95B5292H3C1C972H8FAF6A2H7E5EBCBBCDEDBA92C680B993EFCB6852D20A989D199DF52HE4C452552303ECC490D66B413D19E3D85880DDDB5FDB282H3A1AA0A7D1F186AEFABC351F6347724ECE16CEC94DC9132H0020262157772B00541290ADD1F50A34B46CEFE763E7B3B4C2E25A73276115285470546BEB33030A8E0AB0B7C1E1D0FEAAEC92AFD3F7211E9E46D3D95DD955522404BE91C583CFF28EAA82BD3DE58F8400847275032388A4F0B65C611D394778F820F7FB7FFBDFD8AE8E969F2H8C0D3H00D3C30A0200974C9AAD292HB3B19F56666472342H3555A63608D9C71126A25DD236A0A4898B9D352H3400595B5F032H2C2E7A9E2H9DA958505A68CACFC79731363266717D73593C2H3E0C0107035741CE2ABCF5FA0411805661E540CF2BBD89857B6E5E2H596D47444070AAA3AD9BB6BEB2E66E2H6939697A6E401E0B192FC0C2C69641494115414C4E58572H457B839E84AADFD5D7C1914665F5435B5D6F0C2H10222H243D755048427CFEE5EDD34B6E48623F3D3F297C5A6E506A4B795F2H5046065EB92550B3A35D487B5CA2B7C7E91702A4A5A7B13H0060E1714F9EC9C02HD35H00710A0200B9C426073H00A1AC9F4D5C010F329A5H99B93F26073H003659A4B0D39805260D3H00B3AE11DB6A5EFE3D9950A0F722260D3H00A2655071EBEFDF1A686B21387326103H003984B7C0B02EF7EB832F9B6FFD48AE6226083H00A97427F22459710D260C3H00616C5FAD925A50856905F417260F3H00B520731DA13DB884087CE889E03A7426113H00622510A43B35085AA9BE6D75B2982A0321260C3H009500530DDD5DDCB90399E6A326083H006934E70F6A94A65226093H00212C1FF9FB2H9ADBBC26073H002457323781404B260F3H00911C8FFE5FB905D53975B5478BB3DA328H0026093H001E010CAFFBEFADB5E2260A3H00B904375630B3677C1E85022E22E26566351233D2604D057F41373H00323H00323H00323H00333H00333H00343H00343H00343H00353H00353H00353H00363H00363H00363H00363H00363H00363H00363H00363H00363H00373H00373H00373H00383H00383H00383H00383H00383H00383H00383H00383H00383H00383H00393H00393H00393H003A3H003A3H003A3H003A3H003B3H003B3H003B3H003B3H003C3H003C3H003C3H00383H003E3H00403H00413H00423H00443H00443H00463H002DAEE816100750A50A0200C53HF9CD922H90BE6D7F7D6BD12HD0B03HD5C93H1E2ACC43A731F3FCFEE8F32HF1C5E9EAEEB22HB5B7E36C2H685C4D474F7DF0F6FEAE30373367141A163CE9F9EBC1425040722HEFE7EF030200542A3AC4D1CFCECCDA3HEB8B3H2C30B2BB2HA8013H0034A00A0200A73H9AAE092H0B39C6C4CC9C383F3B6F9E989CAE2HDFDD89AC2HA89C6E6D6F3B3H6256712H73414E4C441460676337E6ECE4D6C3C5CDF1B2BEBA981F171B4F222A3A72DAD9D18DD4D6D480D8D12HC25H00670A02004926073H006FFA9D7F4AFB7C260D3H007467B25235571DF4DE2903EEED260E3H001B0609B23E5071B572D2D46F2AA826143H007DF80B35982433E7875540411FF84D2501049E9426073H00E9C4377584C987260F3H009E61FC6CD634BB8014AC40531DBB22260A3H00E30E513A7A493927A9F426063H00C9A4178CA0F7329H00F1D8274032F9055BAF60314F5E48143H004E3H004E3H004E3H004E3H004E3H004E3H004F3H004F3H00503H00503H00503H00503H00503H00503H00503H00503H00503H00503H00503H00513H007C21960F280500680A02003D260A3H00D39A05C5A9CAF0899D49C426073H006D4C6FB1E07957329A5H99B93F26073H00AAD51470AF043D260D3H004B323D9BDAA202C5012HCCC702260A3H00DE39E8CB2E6C156A9452260E3H0030C3CA395BD48F65288733A4992D26083H00F6F1C05ABE29A163260A3H00FED908780DC3E2CA65B500EB2B7E2E9ABFC36C5F05CC3741F6193H00493H00493H00493H004A3H004A3H004B3H004B3H004B3H004C3H004C3H004C3H004D3H004D3H004D3H004D3H004D3H004D3H004D3H00513H004D3H00513H00523H00543H00543H00563H00BA2E9559E703402C0B02002B2H2E2C0220313325919094C8F9FBF3CFE0E4E8D27175652DA7A0ACF01D2H153754565C7E7B79754D7B7E76480503175B898E86DE3E2H33150F1C0224A42HB59713B8B73FAF070C8064627034810B091F3226301E140507117574702C2D2F271BA4A0AC960D0919514B4C401C112H193BD8CED0F2CFCDC1F9DFDAD2ECB1B7A3EFCDCAC29A522H5F7933203E2H182H092BEF444BC3FB5358D440465410493F3D2BF6E0F4DA88999B8D19181C4021232B17282C201A595D4D05AFA8A4F8C52HCDEF1C081436E3E1EDD503060E302D2B3F73D1D6DE86262H2B0D17041A3C4C2H5D7F2B808F0747EFE468ECEAF8BC513331277A627856FCEDEFF97D7C7824D5D7DFE36C68645E75716129D3D4D884392H3113203A280AB7B5B981E7E2EAD4595F4B0795929AC2BA2HB791BBA8B690402H5173A70C038B13BBB03C484E5C18A9E7E5F3BEA4BC9210010315A1A0A4F8494B437F707478424145551DB7B0BCE06D2H6547E4FCECCE4B49457D8B8E86B85553470B191E164E0E2H03251F0C1234F42HE5C763C8C74FFF575CD074726024615B594FC2DEC0EEC4D5D7C1858480DC7D7F774B34303C06DDD9C9815B5C500C612H694B687660429F9D91A9EFEAE2DC0107135F5D5A520A222H2F0943504E2H682H795B7FD4DB530BA3A82450564400A98F8D9B869884AA78696B7D29282C7071737B47B8BCB08A292D3D75BFB8B4E8152H1D3FACB0A486B3B1BD8513161E207D7B6F2361666E36F62HFBDD27342A0C9C2H8DAFBB101F2H973F34B8FCFAE8AC918381970A2A0826ADBDBFA98D8C88D425272F13FCF8F4CE45415119E3E4E8B4892H81A3B092B89A878589B1F7F2FAC4A9AFBBF725222A728A2H87A1CBD8C6E0902H81A3379C931B238B800C585E4C08646D2H7E4H00016F0A020039260E3H0050231E44E01AF9E93A34B62HF6D5260A3H00125540FC7E1412A0F86F26073H0038CB864E154A67260D3H00C53003B984180C1F0F5E5215FC260C3H006497F2624F0185222CAE0988260A3H0018AB66793173ADD7729026143H00DEC14C6D3F2D647235183012B646743CBC505BCA260A3H004ACDF8F9039F5189B6F626103H00F0C3BECE5C7A54729A99643C4938C690260F3H00E033AE5872F945C6BD3843BB62A2D0260D3H0065D0A3DFF2788D7B71E894645B26123H0004379286AB6AAEA599027AE8CB3F26E686C526143H008245B0CE071298B699DDEECE85708B7952FAD29126153H006ED1DC0B8B1FF30BB5FCA4E2104BFF153F6183CDB826143H00DD889B9994A19033B5C7B620D4CF46B96D3779A426153H0069B467116013315B558CCCD2DC0C14C1AA8498401726183H0060B32ED7F37DCD422C9FC327B40B4782354D7A72AC30E8FF00599B6A4E54069741E84D4A057E96A03H00593H00593H005A3H005B3H005B3H005B3H005B3H005B3H005B3H005C3H005C3H005C3H005C3H005C3H005C3H005D3H005D3H005D3H005D3H005D3H005E3H005E3H005F3H00603H00603H00603H00603H00603H00603H00613H00613H00613H00613H00613H00613H00623H00623H00623H00623H00623H00633H00633H00643H00653H00653H00653H00653H00653H00653H00663H00663H00663H00663H00663H00663H00673H00673H00673H00673H00673H00683H00683H00693H006A3H006A3H006A3H006A3H006A3H006A3H006B3H006B3H006B3H006B3H006B3H006B3H006C3H006C3H006C3H006C3H006C3H006D3H006D3H006E3H006F3H006F3H006F3H006F3H006F3H006F3H00703H00703H00703H00703H00703H00703H00713H00713H00713H00713H00713H00723H00723H00733H00743H00743H00743H00743H00743H00743H00753H00753H00753H00753H00753H00753H00763H00763H00763H00763H00763H00773H00773H00783H00793H00793H00793H00793H00793H00793H007A3H007A3H007A3H007A3H007A3H007A3H007B3H007B3H007B3H007B3H007B3H007C3H007C3H007D3H007E3H007E3H007E3H007E3H007E3H007E3H007F3H007F3H007F3H007F3H007F3H007F3H00803H00803H00803H00803H00823H0006764D48AD0840A60A0200792EF8CF4B2H1F1D33B7A4A6B06C2H6D0D3CAC92432BFDCA4E77F81C8A29393B2D872H86B2B5B7B3EF2H1E1C48462H451D0602063662696553BEB8B4E0922H95C5BFB0B8964E5F496795869EA471DBDC5CB9B8B2EE95847A6FB1B0B2A43HE98980102EFFB4BD2HAE5H00680A020029C426073H0048DB66DE053E36329A5H99B93F260D3H00E50053EDD675A11D9FD4AAB2FC26073H00D4472HB2112E6B260D3H00918CBFADA85CE823FB325E41A0260A3H00E0337ED190CE23D8EAD8260E3H00B679B46BFDD6314FBE1D0DE6AFDF260D3H00089B261A457567D785653B0FA8260D3H008F3A9D3EE2E43CC76200E35571019817431BC119CE35F93534591B971A3H00913H00913H00913H00923H00923H00933H00933H00933H00943H00943H00943H00953H00963H00963H00963H00963H00963H00963H00973H00973H00973H00973H00983H009A3H009A3H009C3H00718725290F05DD110B02002B6CBA8909A6A7A58B007E7C6AC0C1C5A11686BC696BBD8E0E850AD2787E050711757470402D2F2777A42HA2F2BE31E943BFB7495C10131727BB6C53DFCFC5C7FDDEDCD488B7BFB3E3A7CECCDA545B4B6136301068181F034F35BA76C8F1959781414A5E6C392F3D1397F6F4E2909981AD1E0C02302523210F3C2A283E3FEBC458AABAB684CBC7DBF319040036EFE1C1B90F002458252B03732HD6CE86232B3D1D1F1900484E4F577B47445E124B9FB02CEEFEF2C03F332F077D606452E3EDCDB56C7C5824D9D7FF8F2H6A723A777F6949DBDDC48C7D3B392F33223A16B391AF85F7E4C4BC5C5B470B90BE8CBEBF93A391BE94A29020F5DE46CDE4D4FA657D59254F485018E0CBF9CFB98CA096062D1F29A7ACA084544B495F10C4EB7743535F6DB8B4A88068757147E8E6C6BE46496D118688A0D02H574F071C140222060019511D1C0428F6F5EFA36CB8970B97878BB97C706C445C414573CCC2E29AC5D5F18D8A84ACDC2H7B632B30382E0ED2D4CD855958406C62617B37666A725E9B2H87B5E2ECF0B41D07275F505E7A062H2539754B4D541C7D6B697F03120A2663417F554754740C8C8B97DB80AE9CAE6F4373412E04320010C5EE76BD94A48A352D0975BFB8A0E8103B093FA99CB086B69DAF99161E10007D7B796F6E627A56F32HEFDD2A24387C859FBFC7D8D6F28E2HFDE1ADF3F5ECA4CC2BBBC299F50B1E3A42BCA90F738D98262725332HFEFA9E37A79D48B3BA2HA94H0001790A0200F5C426073H00CE79208483F4E0329A5H99B93F26083H00F7B681B8DA2357CF26113H003F9E8937E6C6E981F4E5F4762F7B5B78BC26063H006E99C05AF1FC260B3H00341756E309A88F153D2D4A26073H00A910A31CACE9C2260E3H0026B1B808D327CF836BF00E5D47AF26053H00D437F69E4F260F3H00FB8A65AF1AB2A5E7AB978362B2AABD260B3H00588B5A25237CC7AD693CAC260A3H00FD7457C084CB6F45F7AF26063H009F7EE93E86E5328H00326H002E40327H00C026073H000DC4E7019095CE260D3H00FA95EC682B8DF316106B7D1453260A3H0001483B9AC95DC62H7B83260C3H0003322D22554942CC98CCFCC1260A3H004FEE1905FF6750D1F9A226083H0021E85B3CA4B0AADB260F3H00299023852C6D53E05E4AA852BC400B26123H008E39E0D6D3283DC70624EC38789C0F8B3F25260B3H003043720EC5372732B17FA3325H0088E3C004C2BBFA481E6C8721F092076B2EF2853H009F3H009F3H009F3H00A03H00A03H00A13H00A13H00A13H00A23H00A23H00A23H00A23H00A23H00A33H00A33H00A33H00A33H00A33H00A33H00A43H00A43H00A43H00A43H00A43H00A43H00A43H00A43H00A53H00A53H00A53H00A53H00A63H00A63H00A63H00A63H00A63H00A63H00A63H00A63H00A63H00A63H00A73H00A73H00A83H00A83H00A83H00A83H00A83H00A83H00A83H00A83H00A83H00A83H00A83H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00A93H00AA3H00AA3H00AA3H00AA3H00AA3H00AA3H00AA3H00AA3H00AA3H00AA3H00AB3H00AB3H00AC3H00AC3H00AC3H00AC3H00AC3H00AC3H00AC3H00AC3H00AC3H00AC3H00AD3H00AD3H00AE3H00AE3H00AE3H00AE3H00AE3H00AE3H00AE3H00AE3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00AF3H00B03H00B03H00B03H00B03H00B03H00B03H00B03H00A33H00B23H00B33H00B43H00B53H00B73H00B73H00B93H0094965219820BB7AA0A020077EB3D0E8EFFFEFCD29A8D8F99E9E8EC880999A376E234078756D901AB584C4E5832333707C4C6CE9E2HF7F1A173707428A7A3AF9BCEC1C096CFC6C3955C545860D8C9D5EB848E9AD65E595109FBEEF6D0CCD7C1E711080022DC7778F0329A911D878193D7BCA95742C4C5C7D12H8084E081112BFE09002H134H00016C0A02000DC426073H00F5C4479908C1AF329A5H99B93F260E3H00721DCCCD436871AF560CA07213CA260D3H00B8AB021AB416A52H09E7AFF89726093H00E70E099B0CFDCF883C260E3H0056B15014328C97DFCE35B925477926133H00FC1FE6510C52845070A76BC58D76D733788E1A26073H005170031DE47932260D3H00BEF9F8AC27D94FDA74D7E9B06F260A3H00D524271E2569C2B78F5F260E3H008F96F1DCCCF94458A7B2F861EE10260D3H004D3C5F5520C216583032A2009D260D3H00285BF2DB255DD3C2D531CCA0260134280A5B5E1F9314912F4B173DD51E3H00BC3H00BC3H00BC3H00BD3H00BD3H00BE3H00BE3H00BE3H00BF3H00BF3H00BF3H00C03H00C13H00C33H00C43H00C63H00C63H00C63H00C63H00C63H00C63H00C73H00C73H00C73H00C73H00C73H00C83H00CA3H00CA3H00CC3H005C65B8554B0841AA0A020005F92F1C9CF3F2F0DE889F9D8BB1B0B4D00393A97C1EC8FB7B2CA37BD1C8DCDEC8909195A5484A42122HD5D3834B484C10EDE9E5D1525D5C0A555C590FFCF4F8C08A9B87B9A8A2B6FA0C0B035BE3F6EEC8667D6B4D2D343C1E66CDC24A62CAC14D858391D51005FBEE464745532H787C18AB3B01D4555C2H4F4H00016C0A0200A9C426073H009702A537F23715329A5H99B93F260E3H005C0F3AFF8D72D73578CE06F0DDF0260D3H00CE51CC88C2E40B934F3DE11A91260B3H008520737D33459C6E1CB498260E3H007639F4103A1CF30BFE5DCDB1EF1926133H0048DBE6790836AC0074735B4D79A29F33CCAA3A26073H0019D44755341D2H260D3H008E118CF80F397BDEB47F2D54C7260A3H0045E033AE6D9DD6BF4FEB260E3H00AB36F9F84871543C73029015FA38260D3H002D089BD5884672F060B676B095260D3H00DC8FBA5B11F9738AF17584704201FA063C3428E7D7761361B70C156F1E3H00CF3H00CF3H00CF3H00D03H00D03H00D13H00D13H00D13H00D23H00D23H00D23H00D33H00D43H00D63H00D73H00D93H00D93H00D93H00D93H00D93H00D93H00DA3H00DA3H00DA3H00DA3H00DA3H00DB3H00DD3H00DD3H00DF3H002485EA3A560895AA0A020087A37546C6A7A6A48A72656771B1B0B4D081112BFE0ADCEF6F4EC119B340545640EAEBEFDFECEEE6B62H4F4919BBB8BCE09F9B97A33639386E676E6B3DD4DCD0E810011D233C36226E36313961C3D6CEE8445F496FF9E0E8CAA40F00880AA2A9253F392B6F94817F6A1C1D1F092HC8CCA8990933E691982H8B4H00016C0A020039C426073H0003FEE11B3E1309329A5H99B93F260E3H00283B76FB11EEB3594C3A9A3431BC260D3H006AED18DC0E60376FABD1758EAD26093H00C14C3F093661773A0A260E3H004477D262683AAD596CC32BA39DFF26133H0046E934B7AEE49EA6CA8169735F508D9542384826073H0057B2F58752C374260D3H001C8F2AEABD1F75AC66B1CB06B5260A3H00A39E815C937B64ADA965260E3H00390437DEBAA372E2A1900E73E8CA260D3H004B06A987C6E020C2C6080482AB260D3H00FAFDA8FD9F6B814417C7D6961C01F0ADD925615A0A2B9E9F0C1C2B3E1E3H00E23H00E23H00E23H00E33H00E33H00E43H00E43H00E43H00E53H00E53H00E53H00E63H00E73H00E93H00EA3H00EC3H00EC3H00EC3H00EC3H00EC3H00EC3H00ED3H00ED3H00ED3H00ED3H00ED3H00EE3H00F03H00F03H00F23H00C442BB2D0108B5EA0A02001D3H3105822H80AA878385AFD0D6D2F82D252F05ABAEAA9AA2AFA58B9B9C94C461696531131A0A42F5FFEBA7A3A8B0F0E9E5F9BDCBC6E69E959BBFC3FBF4DCACB1A18DF9A3B282EA7D77432F8D2H84D4989E9DC1CC2HDEEA9D9397CB2H4E4C183HD9ED4A2H4862EFEBEDC7585E5A70555D577DF3F6F2C28A878DA3B7A4ACFC05111D49F7E2F2BA7167733F27302868150D1155170E2E568D83A7DBE6FCD4A452496511667A4A22C9DFEB87052H0C5CC0C6C599342H2612757B7F232H5654003H81B5122H103A5753557FE0E6E2C87D757F553B3E3A0A727F755BB1ACA4F4A7B9B5E1B5AABAF2EFCFDB9799B8A0E01735296D7556760E656B4F3320042C5CD4F1DDA96442721A6747731F9D2H94C4E8EEEDB17C2H6E5A6D63673B2H5E5C083H291DDA2HD8F2BFBBBD97686E6A40A5ADA78D838682B25A575D7393B4BCEC49616D395B72622A1D37236F6B405818715D4105B39EBEC65D53770B220C2454B699B5C13A0A3A5285AF9BF7152H1C4C10161549E5EC2HFF5H008F0A0200E526073H00D148BBFD74713A260A3H004E19B093AEBC7D828412260E3H0018CBEAE9830CFFC5D0BF7314B185260C3H0046F1E8985254CE1E8D4D359126133H0062FDA44FE3ECD985E5ACE8DD51A654A3D3FF0026093H0017E611CBBDA83431FA26063H008E59F06D676A32C64221C0F16E0340324H00A0EB9640324A0A2C80291353403241943220B0FFEF3F3252FC547E07137DBE3263C6E43FC9E0813F3241E9D01E49F57C3E326H00F03F32DB392AC039DF6A3E3263C6E43FC9E081BF32A3265DE0885D6ABE26073H00442736D639625E32DD625D607F17F83F3268E89FE002E2A7403294A707605E4A534032EB1C242HC0FEEF3F322992F23F1E64603E322022B800E2DD913F32A747C63F233E60BE328F2B2F60184A51BE322022B800E2DD91BF3224B16DBF51B8503E32231FAADF3BD0FE3F3261A6ED5F0149B2403294111780C65E534032750EE7DF03FBEF3F324F241D3F5345E03D320D864920BDDBA1BF329471FD5FD3C3D7BD320F5805C056810F3E320D864920BDDBA13F32141DEFFFE7610FBE32A431DE7FF952174032B6F814001BA7B840325C4DE83F3571524032241CBF5FE80BDB3F329CF450A0AE277EBE32BABF0D408900ED3F32CD24406092021B3E322510BA7FA389803E32BABF0D408900EDBF32D211B15FBC306BBE00876B490274A02A7DE95AC25458BF5E3H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F53H00F63H00F63H00F63H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F73H00F83H00F83H00F83H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00F93H00FA3H00FA3H00FA3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FB3H00FC3H0053D455482F0E57A20A0200DF3H4B7F262H240E3D393F15C0C6C2E89F979DB78F8A8EBEF0FDF7D903040C5CBBB3BFEBA7AEBEF66F65713D030810508B879BDF9F92B2CA9799BDC1C3CCE4940B1B37432736066E878DB9D55D2H54046A6C6F33C9C02HD35H00700A02004926073H00E5A0F3F900914A260A3H00BA5DD8BB3AB84D4200A6260E3H0010E30E1D037C4B2118B7A7B0C165260C3H00E2C580901620AE6EF949DDB926133H0036B9144F27D891AD815828AD65425CEBC7DBF026093H00F7C2A523F52C40D18A26063H007A1D98C573EE32C64221C0F16E0340324H00A0EB9640324A0A2C80291353403241943220B0FFEF3F3252FC547E07137DBE3263C6E43FC9E0813F3241E9D01E49F57C3E326H00F03F32DB392AC039DF6A3E3263C6E43FC9E081BF32A3265DE0885D6ABE00E52969529F0AD457B5CE2H5FDAEF163H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF3H00FF4H00012H00735CBA09730EA4A20A0200713H4175262H240ECFCBCDE70C0A0E24EDE5EFC5C7C2C6F61A171D33CFC8C090D1D9D581979E8EC6ADA7B3FFCFC4DC9C0905195DB7BA9AE27D73572B0F00285861715D290716264E757F4B27712H7828181E1D41E1E82HFB5H00700A0200F926073H00F4A7C262516E5B260A3H00A1ECDF6AD14942D32B97260E3H0017B2756C1C4D70B01F464C61CED4260C3H00C9D487E18D71917FE2B8DA6826133H009D081BDE4CA996FC3A69375C9ED35B5A6C8AFF26093H0086A9B424C4B791AE9B26063H0061AC9F94189F32DD625D607F17F83F3268E89FE002E2A7403294A707605E4A534032EB1C242HC0FEEF3F322992F23F1E64603E322022B800E2DD913F32A747C63F233E60BE326H00F03F328F2B2F60184A51BE322022B800E2DD91BF3224B16DBF51B8503E009A702F7D31CC4A45E147A13DB44D163H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0003012H0004012H0045B08815090E84A20A0200E53HCBFFAC2HAE84818583A9DADCD8F2878F85AF9D989CAC5C515B7561666E3E8B838FDBCDC4D49C73796D2139322A6AB3BFA3E73D301068DBD5F18D313E16662B3B1763CDDCEC847B714529872H8EDEF2F4F7AB9B922H815H00700A02000926073H00FB26A923D6AF40260A3H00A0F3DE7110CE03F8AA98260E3H009699B4EB5D76718F1E7D8DE68FFF260C3H0048DB06CA4CF6D064E3A7DB7326133H005C8F5A35CDA62H17FBEE76A79FAC5AA1AD0DBE26093H006D28BBA52F7616EF8026063H0060B39E8F591832231FAADF3BD0FE3F3261A6ED5F0149B2403294111780C65E534032750EE7DF03FBEF3F324F241D3F5345E03D320D864920BDDBA1BF329471FD5FD3C3D7BD326H00F03F320F5805C056810F3E320D864920BDDBA13F32141DEFFFE7610FBE004DA4F22764A1C33D3F933D13E1B4163H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0007012H0008012H000A6BC17F1F0E27A20A0200D73H4D79082H0A207F7B7D57E2E4E0CA21292309E9ECE8D8B2BFB59BA1A6AEFEBDB5B9ED999080C8ADA7B3FF212A327205091551F9F4D4AC555B7F03616E46360D1D314509182840C5CFFB977F2H7626F4F2F1ADAFA62HB55H00700A02002526073H003AB57C580F54F5260A3H0023627D34AB77F89D59F9260E3H00454C4FF2A60352DE5D58B61F74BA260C3H003BDAD55F376F2B512076F87626133H00E7B6A1D03E47048200378D523C3D598496744526093H00685B7AB6FA0DCF14B526063H0063A2BDCA622132A431DE7FF952174032B6F814001BA7B840325C4DE83F3571524032241CBF5FE80BDB3F329CF450A0AE277EBE32BABF0D408900ED3F32CD24406092021B3E326H00F03F322510BA7FA389803E32BABF0D408900EDBF32D211B15FBC306BBE006BA6ED2EB9F88F68E54ACE4AE8A2163H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000B012H000C012H000AC2A762640E009E0A020069260D3H00C17C2FF612F9CF05CD46CEBC1226073H005023AED68D726F260A3H006D089BAEDDD0E70500B426243H00131EA1347B0E2D0BB179B664E6C1215561E7FFE29C8520C709A7FEAB217411E3AB9FF06426063H00EF5A3D360E4126123H0079F467D15D718D0914F8B0AD4AA43EED0C1D26073H00570225C5BDAB0C260A3H001CCF3A565D325536B02226043H007215F08B260B3H004E518CFCCB79CD5CE93B3D26073H0037E20528DCD324260B3H00FCAF1ABC6D5F997FD5553F260A3H00F5D0A36F4418F0C898F1260C3H001B66297072AE8030FCEC55AF26093H008FFADDAB6EB56DFB7526183H0032D5B0CD677F261E4A810D9C2367608482F700201D68CC1B260F3H00DABDD8A7D78A00C747C5F4029A944826083H005F4AAD0BB343889026083H00D782A54C323C84F026153H004FBA9DF2AAEF957487D2EC1F36BAA46E5A04EE47D626193H0006C9C4FD03FCAC1008F34E1FBA3DB8CF1FCA57C8A0117E44C9262A3H00B1EC1F5E056DBBA8CCDCF87845A8676AD12F3555721CE225FA7BF5D67B5764A1D2869ABF15993E87C8FE26223H00772245EC928DF51CBA2A59391F531DD41BB27175800B1CCEBAB80DFB6A865B54653226463H002580D389097DBB1D6E1825732EEB670E35A2A60C24E5D3CE2DFB58F4203443CE253B98E361BDCB7E987C0BB74CC0480190BCCF0E6A47C2AAACEC7F034D0456AC9129D2F84AF026193H008FFADDB96FB27CF02773A0C4EC4D7E251119EB3B93277B608426073H00A2C520351F73D126073H006FDABD9582C59A26103H0074E712C5FC028094587F30C838B35F9B26113H00E4D782D56C323084E86FD3F3DEAEE4B73B260F3H00C7F295002FAFBF694B0AE245DE61A826133H00C4B762F58C5250A4080FFF11FDC613D740C6BE260A3H00755023FEDD8D666F1F7B260E3H009BE6A9E8F82104AC4372C0256A08260D3H005D788B11FC60D4D727466AEDF4260C3H00CCFFEA1A8709ADFAF4164120260F3H00A0F3FED65D862E7B371975119D0BF626123H003510E31D14C0B38B5FAD3AE50016346E40F3260C3H00D3DE615FA75B6F5928623CA626113H00477215B3AB2F23EDDCDE68DA7AE22D215326073H00E20560C4DF288826133H00AF1AFD505E9B58DA483B9182CC41453CFEF89926073H00881B66614176A626093H00E54093CA4EBBE896B826133H00F80BD658E1735D96DFEA60626A2C02AC1A9F35260A3H000904F7E3AB541A3F67D7260B3H006FDABD9C99D989108865DB260B3H009063EEB0592B25E23AB955260A3H00E9E4D7EDD5743A318FEF260E3H004FBA9DFDA7F3BA20B59DB53F31AC260D3H00D10C3F6BFE5CC967A5E4F810E726123H00E0333E921756BA29FDC606DC47D3F23A224126143H00AEB1EC52731E7CF285892HE2310CAF7D3EEE2E6D26153H007A5D78CF37EB7FA7E1204066FCFFA3898B6DA709A426143H008984776D28C5949FA17B8A34582B024559BB15F026153H003510E33D14CFADAF59E808CE0800387556A09CAC0326183H001CCF3A5B57397136A033177BD08F2B36E9D1CE7E8874F42B260D3H004437E24415C7D161AFD873937F260C3H002BF639F552269A2HF04B5D0026093H009F8AEDCA77074D4164260B3H00C2E540D0EC58AFFB9BB18B26093H000BD619C76C5BB9DCF026093H000E114C3D1FB91C942826103H0009042HF7AB4C1C1D6A9C26A9D1B985D2260B3H00F974E746D0FC062H9E5E2B00EA0CA40B0C06DA3AA6587743CAEAC83H00013H00013H00013H00013H00013H00013H00013H00023H00023H00023H00033H00033H00033H00033H00033H00053H00053H00053H00063H00063H00063H00073H00073H00073H00083H00083H00083H000A3H000A3H000A3H000B3H000B3H000B3H000D3H000D3H000D3H000D3H000E3H000E3H000E3H000E3H000F3H000F3H000F3H000F3H00113H00113H00113H00113H00133H00133H00133H00133H00143H00143H00143H00143H00173H00173H00173H00183H00183H00183H001B3H001B3H001B3H001D3H001D3H001D3H001E3H001E3H001E3H001F3H001F3H001F3H00203H00203H00203H00223H00233H00243H00253H00263H00273H00273H00273H00283H00283H00283H00283H00283H00283H00283H00293H00293H00293H00293H00293H00293H002A3H002A3H002A3H002B3H002B3H002B3H002C3H002C3H002C3H002D3H002D3H002E3H002F3H00313H00313H00313H00463H00463H00463H00313H00483H00483H00483H00563H00483H00573H00573H00573H00823H00823H00833H00843H00853H00863H00873H00883H00893H008A3H008C3H008C3H008C3H00573H00903H00903H00903H009C3H009C3H00903H009E3H009E3H009E3H00B93H00B93H00B93H00B93H00B93H009E3H00BB3H00BB3H00BB3H00CC3H00CC3H00BB3H00CE3H00CE3H00CE3H00DF3H00DF3H00CE3H00E13H00E13H00E13H00F23H00F23H00E13H00F43H00F43H00F43H00FC3H00F43H00FE3H00FE3H00FE4H00012H00FE3H0002012H0002012H0002012H0004012H0002012H0006012H0006012H0006012H0008012H0006012H000A012H000A012H000A012H000C012H000A012H000C012H009AE33A590A2C005F0A0200FD325H00E4944000785A975FF1A16D5251AF1E1F11204H00AF43B5591900", lIllIIi11li11Ilii1lll()) 